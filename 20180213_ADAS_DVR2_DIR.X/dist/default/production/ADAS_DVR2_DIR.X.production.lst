

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Jan 17 23:19:05 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	dabs	1,0x120,80
    25                           	dabs	1,0xDC,20
    26                           	dabs	1,0x208C,0,_GPS
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  0007                     	;# 
    36  0008                     	;# 
    37  0009                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  008C                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0097                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009A                     	;# 
    63  009B                     	;# 
    64  009B                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0117                     	;# 
    75  0118                     	;# 
    76  0119                     	;# 
    77  011D                     	;# 
    78  011D                     	;# 
    79  018C                     	;# 
    80  0191                     	;# 
    81  0191                     	;# 
    82  0192                     	;# 
    83  0193                     	;# 
    84  0193                     	;# 
    85  0194                     	;# 
    86  0195                     	;# 
    87  0196                     	;# 
    88  0197                     	;# 
    89  0199                     	;# 
    90  019A                     	;# 
    91  019B                     	;# 
    92  019B                     	;# 
    93  019C                     	;# 
    94  019D                     	;# 
    95  019E                     	;# 
    96  019F                     	;# 
    97  020C                     	;# 
    98  028C                     	;# 
    99  030C                     	;# 
   100  038C                     	;# 
   101  0391                     	;# 
   102  0392                     	;# 
   103  0393                     	;# 
   104  0691                     	;# 
   105  0692                     	;# 
   106  0693                     	;# 
   107  0694                     	;# 
   108  0695                     	;# 
   109  0D8E                     	;# 
   110  0D8F                     	;# 
   111  0D90                     	;# 
   112  0D91                     	;# 
   113  0D91                     	;# 
   114  0D92                     	;# 
   115  0D93                     	;# 
   116  0D93                     	;# 
   117  0D94                     	;# 
   118  0D95                     	;# 
   119  0D95                     	;# 
   120  0D96                     	;# 
   121  0D97                     	;# 
   122  0D97                     	;# 
   123  0D98                     	;# 
   124  0D99                     	;# 
   125  0D99                     	;# 
   126  0D9A                     	;# 
   127  0D9B                     	;# 
   128  0D9C                     	;# 
   129  0D9C                     	;# 
   130  0D9D                     	;# 
   131  0D9D                     	;# 
   132  0D9E                     	;# 
   133  0D9F                     	;# 
   134  0DA0                     	;# 
   135  0DA1                     	;# 
   136  0DA1                     	;# 
   137  0DA2                     	;# 
   138  0DA3                     	;# 
   139  0DA3                     	;# 
   140  0DA4                     	;# 
   141  0DA5                     	;# 
   142  0DA5                     	;# 
   143  0DA6                     	;# 
   144  0DA7                     	;# 
   145  0DA7                     	;# 
   146  0DA8                     	;# 
   147  0DA9                     	;# 
   148  0DA9                     	;# 
   149  0DAA                     	;# 
   150  0DAB                     	;# 
   151  0DAC                     	;# 
   152  0DAC                     	;# 
   153  0DAD                     	;# 
   154  0DAD                     	;# 
   155  0DAE                     	;# 
   156  0DAF                     	;# 
   157  0DB0                     	;# 
   158  0DB1                     	;# 
   159  0DB1                     	;# 
   160  0DB2                     	;# 
   161  0DB3                     	;# 
   162  0DB3                     	;# 
   163  0DB4                     	;# 
   164  0DB5                     	;# 
   165  0DB5                     	;# 
   166  0DB6                     	;# 
   167  0DB7                     	;# 
   168  0DB7                     	;# 
   169  0DB8                     	;# 
   170  0DB9                     	;# 
   171  0DB9                     	;# 
   172  0DBA                     	;# 
   173  0DBB                     	;# 
   174  0DBC                     	;# 
   175  0DBC                     	;# 
   176  0DBD                     	;# 
   177  0DBD                     	;# 
   178  0DBE                     	;# 
   179  0DBF                     	;# 
   180  0DC0                     	;# 
   181  0FE4                     	;# 
   182  0FE5                     	;# 
   183  0FE6                     	;# 
   184  0FE7                     	;# 
   185  0FE8                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEA                     	;# 
   190  0FEB                     	;# 
   191  0FED                     	;# 
   192  0FEE                     	;# 
   193  0FEE                     	;# 
   194  0FEF                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0015                     	;# 
   212  0016                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001C                     	;# 
   220  008C                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  010C                     	;# 
   237  0111                     	;# 
   238  0112                     	;# 
   239  0115                     	;# 
   240  0116                     	;# 
   241  0117                     	;# 
   242  0118                     	;# 
   243  0119                     	;# 
   244  011D                     	;# 
   245  011D                     	;# 
   246  018C                     	;# 
   247  0191                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0194                     	;# 
   253  0195                     	;# 
   254  0196                     	;# 
   255  0197                     	;# 
   256  0199                     	;# 
   257  019A                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019C                     	;# 
   261  019D                     	;# 
   262  019E                     	;# 
   263  019F                     	;# 
   264  020C                     	;# 
   265  028C                     	;# 
   266  030C                     	;# 
   267  038C                     	;# 
   268  0391                     	;# 
   269  0392                     	;# 
   270  0393                     	;# 
   271  0691                     	;# 
   272  0692                     	;# 
   273  0693                     	;# 
   274  0694                     	;# 
   275  0695                     	;# 
   276  0D8E                     	;# 
   277  0D8F                     	;# 
   278  0D90                     	;# 
   279  0D91                     	;# 
   280  0D91                     	;# 
   281  0D92                     	;# 
   282  0D93                     	;# 
   283  0D93                     	;# 
   284  0D94                     	;# 
   285  0D95                     	;# 
   286  0D95                     	;# 
   287  0D96                     	;# 
   288  0D97                     	;# 
   289  0D97                     	;# 
   290  0D98                     	;# 
   291  0D99                     	;# 
   292  0D99                     	;# 
   293  0D9A                     	;# 
   294  0D9B                     	;# 
   295  0D9C                     	;# 
   296  0D9C                     	;# 
   297  0D9D                     	;# 
   298  0D9D                     	;# 
   299  0D9E                     	;# 
   300  0D9F                     	;# 
   301  0DA0                     	;# 
   302  0DA1                     	;# 
   303  0DA1                     	;# 
   304  0DA2                     	;# 
   305  0DA3                     	;# 
   306  0DA3                     	;# 
   307  0DA4                     	;# 
   308  0DA5                     	;# 
   309  0DA5                     	;# 
   310  0DA6                     	;# 
   311  0DA7                     	;# 
   312  0DA7                     	;# 
   313  0DA8                     	;# 
   314  0DA9                     	;# 
   315  0DA9                     	;# 
   316  0DAA                     	;# 
   317  0DAB                     	;# 
   318  0DAC                     	;# 
   319  0DAC                     	;# 
   320  0DAD                     	;# 
   321  0DAD                     	;# 
   322  0DAE                     	;# 
   323  0DAF                     	;# 
   324  0DB0                     	;# 
   325  0DB1                     	;# 
   326  0DB1                     	;# 
   327  0DB2                     	;# 
   328  0DB3                     	;# 
   329  0DB3                     	;# 
   330  0DB4                     	;# 
   331  0DB5                     	;# 
   332  0DB5                     	;# 
   333  0DB6                     	;# 
   334  0DB7                     	;# 
   335  0DB7                     	;# 
   336  0DB8                     	;# 
   337  0DB9                     	;# 
   338  0DB9                     	;# 
   339  0DBA                     	;# 
   340  0DBB                     	;# 
   341  0DBC                     	;# 
   342  0DBC                     	;# 
   343  0DBD                     	;# 
   344  0DBD                     	;# 
   345  0DBE                     	;# 
   346  0DBF                     	;# 
   347  0DC0                     	;# 
   348  0FE4                     	;# 
   349  0FE5                     	;# 
   350  0FE6                     	;# 
   351  0FE7                     	;# 
   352  0FE8                     	;# 
   353  0FE8                     	;# 
   354  0FE9                     	;# 
   355  0FEA                     	;# 
   356  0FEA                     	;# 
   357  0FEB                     	;# 
   358  0FED                     	;# 
   359  0FEE                     	;# 
   360  0FEE                     	;# 
   361  0FEF                     	;_GPS
   362                           
   363                           	psect	idataBANK0
   364  0464                     __pidataBANK0:	
   365                           
   366                           ;initializer for _highValueOfFrequency
   367  0464  3400               	retlw	0
   368  0465  34C0               	retlw	192
   369  0466  343F               	retlw	63
   370                           
   371                           ;initializer for _lowValueOfFrequency
   372  0467  349A               	retlw	154
   373  0468  3419               	retlw	25
   374  0469  343F               	retlw	63
   375  000B                     _INTCONbits	set	11
   376  0011                     _PIR1bits	set	17
   377  000C                     _PORTAbits	set	12
   378  008C                     _TXIF	set	140
   379  0099                     _OSCCON	set	153
   380  0091                     _PIE1bits	set	145
   381  008C                     _TRISA	set	140
   382  008C                     _TRISAbits	set	140
   383  010C                     _LATA	set	268
   384  019B                     _SPBRG	set	411
   385  018C                     _ANSELA	set	396
   386  018C                     _ANSELAbits	set	396
   387  019F                     _BAUDCONbits	set	415
   388  0199                     _RCREG	set	409
   389  019D                     _RCSTAbits	set	413
   390  019A                     _TXREG	set	410
   391  019E                     _TXSTAbits	set	414
   392                           
   393                           ; #config settings
   394  0000                     
   395                           	psect	cinit
   396  0052                     start_initialization:	
   397  0052                     __initialization:		;BIGRAM
   398                           
   399                           ; Initialize objects allocated to BANK0
   400  0052  3064               	movlw	low __pidataBANK0
   401  0053  0084               	movwf	4
   402  0054  3084               	movlw	(high __pidataBANK0)| (0+128)
   403  0055  0085               	movwf	5
   404  0056  0012               	moviw fsr0++
   405  0057  00E8               	movwf	__pdataBANK0& (0+127)
   406  0058  0012               	moviw fsr0++
   407  0059  00E9               	movwf	(__pdataBANK0+1)& (0+127)
   408  005A  0012               	moviw fsr0++
   409  005B  00EA               	movwf	(__pdataBANK0+2)& (0+127)
   410  005C  0012               	moviw fsr0++
   411  005D  00EB               	movwf	(__pdataBANK0+3)& (0+127)
   412  005E  0012               	moviw fsr0++
   413  005F  00EC               	movwf	(__pdataBANK0+4)& (0+127)
   414  0060  0012               	moviw fsr0++
   415  0061  00ED               	movwf	(__pdataBANK0+5)& (0+127)
   416                           
   417                           ; Clear objects allocated to BIGRAM
   418  0062  308C               	movlw	low (0+8332)
   419  0063  0084               	movwf	4
   420  0064  3020               	movlw	high (0+8332)
   421  0065  0085               	movwf	5
   422  0066  3064               	movlw	100
   423  0067  00FE               	movwf	btemp
   424  0068  3000               	movlw	0
   425  0069  00FF               	movwf	btemp+1
   426  006A  2441               	fcall	clear_ram0
   427                           
   428                           ; Clear objects allocated to COMMON
   429  006B  01F8               	clrf	__pbssCOMMON& (0+127)
   430  006C  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   431                           
   432                           ; Clear objects allocated to BANK0
   433  006D  305C               	movlw	low __pbssBANK0
   434  006E  0084               	movwf	4
   435  006F  3000               	movlw	high __pbssBANK0
   436  0070  0085               	movwf	5
   437  0071  300C               	movlw	12
   438  0072  00FE               	movwf	btemp
   439  0073  3000               	movlw	0
   440  0074  00FF               	movwf	btemp+1
   441  0075  2441               	fcall	clear_ram0
   442                           
   443                           ; Clear objects allocated to BANK1
   444  0076  0021               	movlb	1	; select bank1
   445  0077  01A0               	clrf	__pbssBANK1& (0+127)
   446  0078  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   447  0079  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   448  007A  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   449  007B  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   450  007C  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   451  007D                     end_of_initialization:	
   452                           ;End of C runtime variable initialization code
   453                           
   454  007D                     __end_of__initialization:	
   455  007D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   456  007E  0020               	movlb	0
   457  007F  2ADC               	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssCOMMON
   460  0078                     __pbssCOMMON:	
   461  0078                     _GPS_flag:	
   462  0078                     	ds	1
   463  0079                     _test:	
   464  0079                     	ds	1
   465                           
   466                           	psect	bssBANK0
   467  005C                     __pbssBANK0:	
   468  005C                     _Period:	
   469  005C                     	ds	3
   470  005F                     _Neg:	
   471  005F                     	ds	2
   472  0061                     _Pos:	
   473  0061                     	ds	2
   474  0063                     _sensorVal_1:	
   475  0063                     	ds	2
   476  0065                     _Flow_Init:	
   477  0065                     	ds	1
   478  0066                     _GPS_out:	
   479  0066                     	ds	1
   480  0067                     _counter:	
   481  0067                     	ds	1
   482                           
   483                           	psect	dataBANK0
   484  0068                     __pdataBANK0:	
   485  0068                     _highValueOfFrequency:	
   486  0068                     	ds	3
   487  006B                     _lowValueOfFrequency:	
   488  006B                     	ds	3
   489                           
   490                           	psect	bssBANK1
   491  00A0                     __pbssBANK1:	
   492  00A0                     _rxBytes:	
   493  00A0                     	ds	6
   494                           
   495                           	psect	clrtext
   496  0441                     clear_ram0:	
   497                           ;	Called with FSR0 containing the base address, and
   498                           ;	btemp/btemp+1 has the size to clear
   499                           
   500  0441  0064               	clrwdt	;clear the watchdog before getting into this loop
   501  0442                     clrloop0:	
   502  0442  0180               	clrf	0	;clear RAM location pointed to by FSR
   503  0443  3101               	addfsr 0,1
   504  0444  3001               	movlw	1
   505  0445  02FE               	subwf	126,f
   506  0446  3000               	movlw	0
   507  0447  3BFF               	subwfb	127,f
   508  0448  087F               	movf	127,w
   509  0449  047E               	iorwf	126,w
   510  044A  1903               	btfsc	3,2
   511  044B  3400               	retlw	0	;all done for this memory range, return
   512  044C  2C42               	goto	clrloop0	;have we reached the end yet?
   513                           
   514                           	psect	cstackCOMMON
   515  0070                     __pcstackCOMMON:	
   516  0070                     ?_Example_System_Init:	
   517  0070                     ?_EUSARTInit:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_putch:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_InterruptHandlerLow:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ??_InterruptHandlerLow:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_main:	
   530                           ; 1 bytes @ 0x0
   531                           
   532                           
   533                           ; 1 bytes @ 0x0
   534  0070                     	ds	3
   535  0073                     InterruptHandlerLow@cUART_char:	
   536                           
   537                           ; 1 bytes @ 0x3
   538  0073                     	ds	1
   539  0074                     ??_Example_System_Init:	
   540  0074                     ??_EUSARTInit:	
   541                           ; 1 bytes @ 0x4
   542                           
   543  0074                     ??_putch:	
   544                           ; 1 bytes @ 0x4
   545                           
   546  0074                     ??___ftpack:	
   547                           ; 1 bytes @ 0x4
   548                           
   549  0074                     putch@data:	
   550                           ; 1 bytes @ 0x4
   551                           
   552                           
   553                           ; 1 bytes @ 0x4
   554  0074                     	ds	3
   555  0077                     ___lbtoft@c:	
   556                           
   557                           ; 1 bytes @ 0x7
   558  0077                     	ds	1
   559                           
   560                           	psect	cstackBANK0
   561  0020                     __pcstackBANK0:	
   562  0020                     ?___ftpack:	
   563  0020                     ___ftpack@arg:	
   564                           ; 3 bytes @ 0x0
   565                           
   566                           
   567                           ; 3 bytes @ 0x0
   568  0020                     	ds	3
   569  0023                     ___ftpack@exp:	
   570                           
   571                           ; 1 bytes @ 0x3
   572  0023                     	ds	1
   573  0024                     ___ftpack@sign:	
   574                           
   575                           ; 1 bytes @ 0x4
   576  0024                     	ds	1
   577  0025                     ?___ftdiv:	
   578  0025                     ?___lbtoft:	
   579                           ; 3 bytes @ 0x5
   580                           
   581  0025                     ___ftdiv@f2:	
   582                           ; 3 bytes @ 0x5
   583                           
   584                           
   585                           ; 3 bytes @ 0x5
   586  0025                     	ds	3
   587  0028                     ??___lbtoft:	
   588  0028                     ___ftdiv@f1:	
   589                           ; 1 bytes @ 0x8
   590                           
   591                           
   592                           ; 3 bytes @ 0x8
   593  0028                     	ds	3
   594  002B                     ??___ftdiv:	
   595                           
   596                           ; 1 bytes @ 0xB
   597  002B                     	ds	1
   598  002C                     ?___ftge:	
   599  002C                     ___ftge@ff1:	
   600                           ; 1 bit 
   601                           
   602                           
   603                           ; 3 bytes @ 0xC
   604  002C                     	ds	3
   605  002F                     ___ftdiv@cntr:	
   606  002F                     ___ftge@ff2:	
   607                           ; 1 bytes @ 0xF
   608                           
   609                           
   610                           ; 3 bytes @ 0xF
   611  002F                     	ds	1
   612  0030                     ___ftdiv@f3:	
   613                           
   614                           ; 3 bytes @ 0x10
   615  0030                     	ds	2
   616  0032                     ??___ftge:	
   617                           
   618                           ; 1 bytes @ 0x12
   619  0032                     	ds	1
   620  0033                     ___ftdiv@exp:	
   621                           
   622                           ; 1 bytes @ 0x13
   623  0033                     	ds	1
   624  0034                     ___ftdiv@sign:	
   625                           
   626                           ; 1 bytes @ 0x14
   627  0034                     	ds	1
   628  0035                     ?___ftmul:	
   629  0035                     ___ftmul@f1:	
   630                           ; 3 bytes @ 0x15
   631                           
   632                           
   633                           ; 3 bytes @ 0x15
   634  0035                     	ds	3
   635  0038                     ___ftmul@f2:	
   636                           
   637                           ; 3 bytes @ 0x18
   638  0038                     	ds	3
   639  003B                     ??___ftmul:	
   640                           
   641                           ; 1 bytes @ 0x1B
   642  003B                     	ds	4
   643  003F                     ___ftmul@exp:	
   644                           
   645                           ; 1 bytes @ 0x1F
   646  003F                     	ds	1
   647  0040                     ___ftmul@f3_as_product:	
   648                           
   649                           ; 3 bytes @ 0x20
   650  0040                     	ds	3
   651  0043                     ___ftmul@cntr:	
   652                           
   653                           ; 1 bytes @ 0x23
   654  0043                     	ds	1
   655  0044                     ___ftmul@sign:	
   656                           
   657                           ; 1 bytes @ 0x24
   658  0044                     	ds	1
   659  0045                     ?_checkFrequencyRange:	
   660  0045                     checkFrequencyRange@lowValue:	
   661                           ; 1 bytes @ 0x25
   662                           
   663                           
   664                           ; 3 bytes @ 0x25
   665  0045                     	ds	3
   666  0048                     checkFrequencyRange@highValue:	
   667                           
   668                           ; 3 bytes @ 0x28
   669  0048                     	ds	3
   670  004B                     checkFrequencyRange@sensorVal:	
   671                           
   672                           ; 2 bytes @ 0x2B
   673  004B                     	ds	2
   674  004D                     ??_checkFrequencyRange:	
   675                           
   676                           ; 1 bytes @ 0x2D
   677  004D                     	ds	1
   678  004E                     checkFrequencyRange@countForHighValue:	
   679                           
   680                           ; 3 bytes @ 0x2E
   681  004E                     	ds	3
   682  0051                     _checkFrequencyRange$682:	
   683                           
   684                           ; 3 bytes @ 0x31
   685  0051                     	ds	3
   686  0054                     checkFrequencyRange@countForLowValue:	
   687                           
   688                           ; 3 bytes @ 0x34
   689  0054                     	ds	3
   690  0057                     ??_main:	
   691                           
   692                           ; 1 bytes @ 0x37
   693  0057                     	ds	4
   694  005B                     main@i:	
   695                           
   696                           ; 1 bytes @ 0x3B
   697  005B                     	ds	1
   698                           
   699                           	psect	maintext
   700  02DC                     __pmaintext:	
   701 ;;
   702 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   703 ;;
   704 ;; *************** function _main *****************
   705 ;; Defined at:
   706 ;;		line 85 in file "main.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  i               1   59[BANK0 ] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : B1F/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   720 ;;      Params:         0       0       0       0
   721 ;;      Locals:         0       1       0       0
   722 ;;      Temps:          0       4       0       0
   723 ;;      Totals:         0       5       0       0
   724 ;;Total ram usage:        5 bytes
   725 ;; Hardware stack levels required when called:    4
   726 ;; This function calls:
   727 ;;		_EUSARTInit
   728 ;;		_Example_System_Init
   729 ;;		_checkFrequencyRange
   730 ;;		_putch
   731 ;; This function is called by:
   732 ;;		Startup code after reset
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function _main
   738  02DC                     _main:	
   739                           
   740                           ;main.c: 87: unsigned char i= 0;
   741                           
   742                           ;incstack = 0
   743                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   744  02DC  0020               	movlb	0	; select bank0
   745  02DD  01DB               	clrf	main@i
   746                           
   747                           ;main.c: 89: _delay((unsigned long)((100)*(16000000/4000.0)));
   748  02DE  3003               	movlw	3
   749  02DF  00D9               	movwf	??_main+2
   750  02E0  3008               	movlw	8
   751  02E1  00D8               	movwf	??_main+1
   752  02E2  3078               	movlw	120
   753  02E3  00D7               	movwf	??_main
   754  02E4                     u1717:	
   755  02E4  0BD7               	decfsz	??_main,f
   756  02E5  2AE4               	goto	u1717
   757  02E6  0BD8               	decfsz	??_main+1,f
   758  02E7  2AE4               	goto	u1717
   759  02E8  0BD9               	decfsz	??_main+2,f
   760  02E9  2AE4               	goto	u1717
   761                           
   762                           ;main.c: 91: Example_System_Init();
   763  02EA  244D               	fcall	_Example_System_Init
   764                           
   765                           ;main.c: 92: EUSARTInit();
   766  02EB  242E               	fcall	_EUSARTInit
   767                           
   768                           ;main.c: 98: if (Flow_Init == 0)
   769  02EC  0020               	movlb	0	; select bank0
   770  02ED  0865               	movf	_Flow_Init,w
   771  02EE  1D03               	btfss	3,2
   772  02EF  2B00               	goto	l1368
   773                           
   774                           ;main.c: 99: {
   775                           ;main.c: 100: _delay((unsigned long)((1000)*(16000000/4000.0)));
   776  02F0  3015               	movlw	21
   777  02F1  00D9               	movwf	??_main+2
   778  02F2  304B               	movlw	75
   779  02F3  00D8               	movwf	??_main+1
   780  02F4  30D1               	movlw	209
   781  02F5  00D7               	movwf	??_main
   782  02F6                     u1727:	
   783  02F6  0BD7               	decfsz	??_main,f
   784  02F7  2AF6               	goto	u1727
   785  02F8  0BD8               	decfsz	??_main+1,f
   786  02F9  2AF6               	goto	u1727
   787  02FA  0BD9               	decfsz	??_main+2,f
   788  02FB  2AF6               	goto	u1727
   789  02FC  0000               	nop
   790                           
   791                           ;main.c: 101: Flow_Init = 1;
   792  02FD  0020               	movlb	0	; select bank0
   793  02FE  01E5               	clrf	_Flow_Init
   794  02FF  0AE5               	incf	_Flow_Init,f
   795  0300                     l1368:	
   796                           ;main.c: 102: }
   797                           ;main.c: 104: while(1)
   798                           
   799                           
   800                           ;main.c: 105: {
   801                           ;main.c: 107: if( GPS_out == 1)
   802  0300  0020               	movlb	0	; select bank0
   803  0301  0366               	decf	_GPS_out,w
   804  0302  1D03               	btfss	3,2
   805  0303  2B4D               	goto	l1402
   806                           
   807                           ;main.c: 108: {
   808                           ;main.c: 110: for(i=0; i < 100;i++)
   809  0304  01DB               	clrf	main@i
   810  0305  3064               	movlw	100
   811  0306  025B               	subwf	main@i,w
   812  0307  1803               	btfsc	3,0
   813  0308  2B2E               	goto	l1386
   814  0309                     l1376:	
   815                           
   816                           ;main.c: 111: {
   817                           ;main.c: 112: putch(GPS[i]);
   818  0309  085B               	movf	main@i,w
   819  030A  3E8C               	addlw	140
   820  030B  0086               	movwf	6
   821  030C  0187               	clrf	7
   822  030D  3020               	movlw	32
   823  030E  3D87               	addwfc	7,f
   824  030F  0801               	movf	1,w
   825  0310  2459               	fcall	_putch
   826                           
   827                           ;main.c: 113: if(GPS[i+1]==0)
   828  0311  0020               	movlb	0	; select bank0
   829  0312  085B               	movf	main@i,w
   830  0313  3E01               	addlw	1
   831  0314  00D7               	movwf	??_main
   832  0315  3000               	movlw	0
   833  0316  1803               	skipnc
   834  0317  3001               	movlw	1
   835  0318  00D8               	movwf	??_main+1
   836  0319  308C               	movlw	140
   837  031A  00D9               	movwf	??_main+2
   838  031B  3020               	movlw	32
   839  031C  00DA               	movwf	??_main+3
   840  031D  0857               	movf	??_main,w
   841  031E  0759               	addwf	??_main+2,w
   842  031F  0086               	movwf	6
   843  0320  0858               	movf	??_main+1,w
   844  0321  3D5A               	addwfc	??_main+3,w
   845  0322  0087               	movwf	7
   846  0323  0801               	movf	1,w
   847  0324  1903               	btfsc	3,2
   848  0325  2B2E               	goto	l1386
   849                           
   850                           ;main.c: 114: break;
   851  0326  3001               	movlw	1
   852  0327  00D7               	movwf	??_main
   853  0328  0857               	movf	??_main,w
   854  0329  07DB               	addwf	main@i,f
   855  032A  3064               	movlw	100
   856  032B  025B               	subwf	main@i,w
   857  032C  1C03               	skipc
   858  032D  2B09               	goto	l1376
   859  032E                     l1386:	
   860                           
   861                           ;main.c: 115: }
   862                           ;main.c: 117: for(i=0; i < 100;i++)
   863  032E  01DB               	clrf	main@i
   864  032F  3064               	movlw	100
   865  0330  025B               	subwf	main@i,w
   866  0331  1803               	btfsc	3,0
   867  0332  2B42               	goto	l1398
   868  0333                     l1392:	
   869                           
   870                           ;main.c: 118: GPS[i]= 0;
   871  0333  085B               	movf	main@i,w
   872  0334  3E8C               	addlw	140
   873  0335  0086               	movwf	6
   874  0336  0187               	clrf	7
   875  0337  3020               	movlw	32
   876  0338  3D87               	addwfc	7,f
   877  0339  0181               	clrf	1
   878  033A  3001               	movlw	1
   879  033B  00D7               	movwf	??_main
   880  033C  0857               	movf	??_main,w
   881  033D  07DB               	addwf	main@i,f
   882  033E  3064               	movlw	100
   883  033F  025B               	subwf	main@i,w
   884  0340  1C03               	skipc
   885  0341  2B33               	goto	l1392
   886  0342                     l1398:	
   887                           
   888                           ;main.c: 120: GPS_flag = 0;
   889  0342  01F8               	clrf	_GPS_flag
   890                           
   891                           ;main.c: 121: GPS_out = 0;
   892  0343  01E6               	clrf	_GPS_out
   893                           
   894                           ;main.c: 123: _delay((unsigned long)((12)*(16000000/4000.0)));
   895  0344  303F               	movlw	63
   896  0345  00D8               	movwf	??_main+1
   897  0346  3055               	movlw	85
   898  0347  00D7               	movwf	??_main
   899  0348                     u1737:	
   900  0348  0BD7               	decfsz	??_main,f
   901  0349  2B48               	goto	u1737
   902  034A  0BD8               	decfsz	??_main+1,f
   903  034B  2B48               	goto	u1737
   904                           
   905                           ;main.c: 124: }
   906  034C  2B57               	goto	l1404
   907  034D                     l1402:	
   908                           
   909                           ;main.c: 125: else
   910                           ;main.c: 126: _delay((unsigned long)((20)*(16000000/4000.0)));
   911  034D  3068               	movlw	104
   912  034E  0020               	movlb	0	; select bank0
   913  034F  00D8               	movwf	??_main+1
   914  0350  30E4               	movlw	228
   915  0351  00D7               	movwf	??_main
   916  0352                     u1747:	
   917  0352  0BD7               	decfsz	??_main,f
   918  0353  2B52               	goto	u1747
   919  0354  0BD8               	decfsz	??_main+1,f
   920  0355  2B52               	goto	u1747
   921  0356  0000               	nop
   922  0357                     l1404:	
   923                           
   924                           ;main.c: 129: if( PORTAbits.RA4 == 0)
   925  0357  0020               	movlb	0	; select bank0
   926  0358  1A0C               	btfsc	12,4	;volatile
   927  0359  2B5D               	goto	l1408
   928                           
   929                           ;main.c: 130: sensorVal_1 =0;
   930  035A  01E3               	clrf	_sensorVal_1
   931  035B  01E4               	clrf	_sensorVal_1+1
   932  035C  2B61               	goto	l1410
   933  035D                     l1408:	
   934                           
   935                           ;main.c: 131: else
   936                           ;main.c: 132: sensorVal_1 =1;
   937  035D  3001               	movlw	1
   938  035E  00E3               	movwf	_sensorVal_1
   939  035F  3000               	movlw	0
   940  0360  00E4               	movwf	_sensorVal_1+1
   941  0361                     l1410:	
   942                           
   943                           ;main.c: 133: checkFrequencyRange(lowValueOfFrequency, highValueOfFrequency, sensorVal_1
      +                          );
   944  0361  086B               	movf	_lowValueOfFrequency,w
   945  0362  00C5               	movwf	checkFrequencyRange@lowValue
   946  0363  086C               	movf	_lowValueOfFrequency+1,w
   947  0364  00C6               	movwf	checkFrequencyRange@lowValue+1
   948  0365  086D               	movf	_lowValueOfFrequency+2,w
   949  0366  00C7               	movwf	checkFrequencyRange@lowValue+2
   950  0367  0868               	movf	_highValueOfFrequency,w
   951  0368  00C8               	movwf	checkFrequencyRange@highValue
   952  0369  0869               	movf	_highValueOfFrequency+1,w
   953  036A  00C9               	movwf	checkFrequencyRange@highValue+1
   954  036B  086A               	movf	_highValueOfFrequency+2,w
   955  036C  00CA               	movwf	checkFrequencyRange@highValue+2
   956  036D  0864               	movf	_sensorVal_1+1,w
   957  036E  00CC               	movwf	checkFrequencyRange@sensorVal+1
   958  036F  0863               	movf	_sensorVal_1,w
   959  0370  00CB               	movwf	checkFrequencyRange@sensorVal
   960  0371  2080               	fcall	_checkFrequencyRange
   961  0372  2B00               	goto	l1368
   962  0373                     __end_of_main:	
   963                           
   964                           	psect	text1
   965  0080                     __ptext1:	
   966 ;; *************** function _checkFrequencyRange *****************
   967 ;; Defined at:
   968 ;;		line 218 in file "main.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  lowValue        3   37[BANK0 ] float 
   971 ;;  highValue       3   40[BANK0 ] float 
   972 ;;  sensorVal       2   43[BANK0 ] int 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  countForLowV    3   52[BANK0 ] float 
   975 ;;  countForHigh    3   46[BANK0 ] float 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, pclath, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   985 ;;      Params:         0       8       0       0
   986 ;;      Locals:         0       9       0       0
   987 ;;      Temps:          0       1       0       0
   988 ;;      Totals:         0      18       0       0
   989 ;;Total ram usage:       18 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    3
   992 ;; This function calls:
   993 ;;		___ftdiv
   994 ;;		___ftge
   995 ;;		___ftmul
   996 ;;		___lbtoft
   997 ;;		_putch
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _checkFrequencyRange
  1005  0080                     _checkFrequencyRange:	
  1006                           
  1007                           ;main.c: 220: float countForHighValue = ((1 / highValue) * 1000 / 20);
  1008                           
  1009                           ;incstack = 0
  1010                           ; Regs used in _checkFrequencyRange: [wreg+status,2+status,0+pclath+cstack]
  1011  0080  3000               	movlw	0
  1012  0081  0020               	movlb	0	; select bank0
  1013  0082  00B5               	movwf	___ftmul@f1
  1014  0083  307A               	movlw	122
  1015  0084  00B6               	movwf	___ftmul@f1+1
  1016  0085  3044               	movlw	68
  1017  0086  00B7               	movwf	___ftmul@f1+2
  1018  0087  0848               	movf	checkFrequencyRange@highValue,w
  1019  0088  00A5               	movwf	___ftdiv@f2
  1020  0089  0849               	movf	checkFrequencyRange@highValue+1,w
  1021  008A  00A6               	movwf	___ftdiv@f2+1
  1022  008B  084A               	movf	checkFrequencyRange@highValue+2,w
  1023  008C  00A7               	movwf	___ftdiv@f2+2
  1024  008D  3000               	movlw	0
  1025  008E  00A8               	movwf	___ftdiv@f1
  1026  008F  3080               	movlw	128
  1027  0090  00A9               	movwf	___ftdiv@f1+1
  1028  0091  303F               	movlw	63
  1029  0092  00AA               	movwf	___ftdiv@f1+2
  1030  0093  2234               	fcall	___ftdiv
  1031  0094  0020               	movlb	0	; select bank0
  1032  0095  0825               	movf	?___ftdiv,w
  1033  0096  00B8               	movwf	___ftmul@f2
  1034  0097  0826               	movf	?___ftdiv+1,w
  1035  0098  00B9               	movwf	___ftmul@f2+1
  1036  0099  0827               	movf	?___ftdiv+2,w
  1037  009A  00BA               	movwf	___ftmul@f2+2
  1038  009B  2181               	fcall	___ftmul
  1039  009C  0020               	movlb	0	; select bank0
  1040  009D  0835               	movf	?___ftmul,w
  1041  009E  00D1               	movwf	_checkFrequencyRange$682
  1042  009F  0836               	movf	?___ftmul+1,w
  1043  00A0  00D2               	movwf	_checkFrequencyRange$682+1
  1044  00A1  0837               	movf	?___ftmul+2,w
  1045  00A2  00D3               	movwf	_checkFrequencyRange$682+2
  1046                           
  1047                           ;main.c: 220: float countForHighValue = ((1 / highValue) * 1000 / 20);
  1048  00A3  3000               	movlw	0
  1049  00A4  00A5               	movwf	___ftdiv@f2
  1050  00A5  30A0               	movlw	160
  1051  00A6  00A6               	movwf	___ftdiv@f2+1
  1052  00A7  3041               	movlw	65
  1053  00A8  00A7               	movwf	___ftdiv@f2+2
  1054  00A9  0851               	movf	_checkFrequencyRange$682,w
  1055  00AA  00A8               	movwf	___ftdiv@f1
  1056  00AB  0852               	movf	_checkFrequencyRange$682+1,w
  1057  00AC  00A9               	movwf	___ftdiv@f1+1
  1058  00AD  0853               	movf	_checkFrequencyRange$682+2,w
  1059  00AE  00AA               	movwf	___ftdiv@f1+2
  1060  00AF  2234               	fcall	___ftdiv
  1061  00B0  0020               	movlb	0	; select bank0
  1062  00B1  0825               	movf	?___ftdiv,w
  1063  00B2  00CE               	movwf	checkFrequencyRange@countForHighValue
  1064  00B3  0826               	movf	?___ftdiv+1,w
  1065  00B4  00CF               	movwf	checkFrequencyRange@countForHighValue+1
  1066  00B5  0827               	movf	?___ftdiv+2,w
  1067  00B6  00D0               	movwf	checkFrequencyRange@countForHighValue+2
  1068                           
  1069                           ;main.c: 221: float countForLowValue = ((1/ lowValue) * 1000 / 20);
  1070  00B7  3000               	movlw	0
  1071  00B8  00B5               	movwf	___ftmul@f1
  1072  00B9  307A               	movlw	122
  1073  00BA  00B6               	movwf	___ftmul@f1+1
  1074  00BB  3044               	movlw	68
  1075  00BC  00B7               	movwf	___ftmul@f1+2
  1076  00BD  0845               	movf	checkFrequencyRange@lowValue,w
  1077  00BE  00A5               	movwf	___ftdiv@f2
  1078  00BF  0846               	movf	checkFrequencyRange@lowValue+1,w
  1079  00C0  00A6               	movwf	___ftdiv@f2+1
  1080  00C1  0847               	movf	checkFrequencyRange@lowValue+2,w
  1081  00C2  00A7               	movwf	___ftdiv@f2+2
  1082  00C3  3000               	movlw	0
  1083  00C4  00A8               	movwf	___ftdiv@f1
  1084  00C5  3080               	movlw	128
  1085  00C6  00A9               	movwf	___ftdiv@f1+1
  1086  00C7  303F               	movlw	63
  1087  00C8  00AA               	movwf	___ftdiv@f1+2
  1088  00C9  2234               	fcall	___ftdiv
  1089  00CA  0020               	movlb	0	; select bank0
  1090  00CB  0825               	movf	?___ftdiv,w
  1091  00CC  00B8               	movwf	___ftmul@f2
  1092  00CD  0826               	movf	?___ftdiv+1,w
  1093  00CE  00B9               	movwf	___ftmul@f2+1
  1094  00CF  0827               	movf	?___ftdiv+2,w
  1095  00D0  00BA               	movwf	___ftmul@f2+2
  1096  00D1  2181               	fcall	___ftmul
  1097  00D2  0020               	movlb	0	; select bank0
  1098  00D3  0835               	movf	?___ftmul,w
  1099  00D4  00D1               	movwf	_checkFrequencyRange$682
  1100  00D5  0836               	movf	?___ftmul+1,w
  1101  00D6  00D2               	movwf	_checkFrequencyRange$682+1
  1102  00D7  0837               	movf	?___ftmul+2,w
  1103  00D8  00D3               	movwf	_checkFrequencyRange$682+2
  1104                           
  1105                           ;main.c: 221: float countForLowValue = ((1/ lowValue) * 1000 / 20);
  1106  00D9  3000               	movlw	0
  1107  00DA  00A5               	movwf	___ftdiv@f2
  1108  00DB  30A0               	movlw	160
  1109  00DC  00A6               	movwf	___ftdiv@f2+1
  1110  00DD  3041               	movlw	65
  1111  00DE  00A7               	movwf	___ftdiv@f2+2
  1112  00DF  0851               	movf	_checkFrequencyRange$682,w
  1113  00E0  00A8               	movwf	___ftdiv@f1
  1114  00E1  0852               	movf	_checkFrequencyRange$682+1,w
  1115  00E2  00A9               	movwf	___ftdiv@f1+1
  1116  00E3  0853               	movf	_checkFrequencyRange$682+2,w
  1117  00E4  00AA               	movwf	___ftdiv@f1+2
  1118  00E5  2234               	fcall	___ftdiv
  1119  00E6  0020               	movlb	0	; select bank0
  1120  00E7  0825               	movf	?___ftdiv,w
  1121  00E8  00D4               	movwf	checkFrequencyRange@countForLowValue
  1122  00E9  0826               	movf	?___ftdiv+1,w
  1123  00EA  00D5               	movwf	checkFrequencyRange@countForLowValue+1
  1124  00EB  0827               	movf	?___ftdiv+2,w
  1125  00EC  00D6               	movwf	checkFrequencyRange@countForLowValue+2
  1126                           
  1127                           ;main.c: 224: if (sensorVal == 0)
  1128  00ED  084B               	movf	checkFrequencyRange@sensorVal,w
  1129  00EE  044C               	iorwf	checkFrequencyRange@sensorVal+1,w
  1130  00EF  1D03               	btfss	3,2
  1131  00F0  28FC               	goto	l1310
  1132                           
  1133                           ;main.c: 225: {
  1134                           ;main.c: 226: Neg[0] = Neg[0] + 1;
  1135  00F1  085F               	movf	_Neg,w
  1136  00F2  3E01               	addlw	1
  1137  00F3  00CD               	movwf	??_checkFrequencyRange
  1138  00F4  084D               	movf	??_checkFrequencyRange,w
  1139  00F5  00DF               	movwf	_Neg
  1140                           
  1141                           ;main.c: 227: if (Pos[0] > 0)
  1142  00F6  0861               	movf	_Pos,w
  1143  00F7  1903               	btfsc	3,2
  1144  00F8  2906               	goto	l1314
  1145                           
  1146                           ;main.c: 228: Pos[1] = 1;
  1147  00F9  01E2               	clrf	_Pos+1
  1148  00FA  0AE2               	incf	_Pos+1,f
  1149                           
  1150                           ;main.c: 229: }
  1151  00FB  2906               	goto	l1314
  1152  00FC                     l1310:	
  1153                           
  1154                           ;main.c: 230: else
  1155                           ;main.c: 231: {
  1156                           ;main.c: 232: Pos[0] = Pos[0] + 1;
  1157  00FC  0861               	movf	_Pos,w
  1158  00FD  3E01               	addlw	1
  1159  00FE  00CD               	movwf	??_checkFrequencyRange
  1160  00FF  084D               	movf	??_checkFrequencyRange,w
  1161  0100  00E1               	movwf	_Pos
  1162                           
  1163                           ;main.c: 233: if (Neg[0] > 0)
  1164  0101  085F               	movf	_Neg,w
  1165  0102  1903               	btfsc	3,2
  1166  0103  2906               	goto	l1314
  1167                           
  1168                           ;main.c: 234: Neg[1] = 1;
  1169  0104  01E0               	clrf	_Neg+1
  1170  0105  0AE0               	incf	_Neg+1,f
  1171  0106                     l1314:	
  1172                           
  1173                           ;main.c: 235: }
  1174                           ;main.c: 238: if (Pos[0] > countForLowValue)
  1175  0106  0854               	movf	checkFrequencyRange@countForLowValue,w
  1176  0107  00AC               	movwf	___ftge@ff1
  1177  0108  0855               	movf	checkFrequencyRange@countForLowValue+1,w
  1178  0109  00AD               	movwf	___ftge@ff1+1
  1179  010A  0856               	movf	checkFrequencyRange@countForLowValue+2,w
  1180  010B  00AE               	movwf	___ftge@ff1+2
  1181  010C  0861               	movf	_Pos,w
  1182  010D  2414               	fcall	___lbtoft
  1183  010E  0020               	movlb	0	; select bank0
  1184  010F  0825               	movf	?___lbtoft,w
  1185  0110  00AF               	movwf	___ftge@ff2
  1186  0111  0826               	movf	?___lbtoft+1,w
  1187  0112  00B0               	movwf	___ftge@ff2+1
  1188  0113  0827               	movf	?___lbtoft+2,w
  1189  0114  00B1               	movwf	___ftge@ff2+2
  1190  0115  23D8               	fcall	___ftge
  1191  0116  1803               	btfsc	3,0
  1192  0117  291B               	goto	l1318
  1193                           
  1194                           ;main.c: 239: {
  1195                           ;main.c: 240: Pos[0]= 0;
  1196  0118  0020               	movlb	0	; select bank0
  1197  0119  01E1               	clrf	_Pos
  1198                           
  1199                           ;main.c: 241: Period[0]= 0;
  1200  011A  01DC               	clrf	_Period
  1201  011B                     l1318:	
  1202                           
  1203                           ;main.c: 242: }
  1204                           ;main.c: 243: if (Neg[0] > countForLowValue)
  1205  011B  0020               	movlb	0	; select bank0
  1206  011C  0854               	movf	checkFrequencyRange@countForLowValue,w
  1207  011D  00AC               	movwf	___ftge@ff1
  1208  011E  0855               	movf	checkFrequencyRange@countForLowValue+1,w
  1209  011F  00AD               	movwf	___ftge@ff1+1
  1210  0120  0856               	movf	checkFrequencyRange@countForLowValue+2,w
  1211  0121  00AE               	movwf	___ftge@ff1+2
  1212  0122  085F               	movf	_Neg,w
  1213  0123  2414               	fcall	___lbtoft
  1214  0124  0020               	movlb	0	; select bank0
  1215  0125  0825               	movf	?___lbtoft,w
  1216  0126  00AF               	movwf	___ftge@ff2
  1217  0127  0826               	movf	?___lbtoft+1,w
  1218  0128  00B0               	movwf	___ftge@ff2+1
  1219  0129  0827               	movf	?___lbtoft+2,w
  1220  012A  00B1               	movwf	___ftge@ff2+2
  1221  012B  23D8               	fcall	___ftge
  1222  012C  1803               	btfsc	3,0
  1223  012D  2931               	goto	l1322
  1224                           
  1225                           ;main.c: 244: {
  1226                           ;main.c: 245: Neg[0]= 0;
  1227  012E  0020               	movlb	0	; select bank0
  1228  012F  01DF               	clrf	_Neg
  1229                           
  1230                           ;main.c: 246: Period[1]= 0;
  1231  0130  01DD               	clrf	_Period+1
  1232  0131                     l1322:	
  1233                           
  1234                           ;main.c: 247: }
  1235                           ;main.c: 250: if (Pos[1] == 1)
  1236  0131  0020               	movlb	0	; select bank0
  1237  0132  0362               	decf	_Pos+1,w
  1238  0133  1D03               	btfss	3,2
  1239  0134  293B               	goto	l1330
  1240                           
  1241                           ;main.c: 251: {
  1242                           ;main.c: 254: Period[0] = Pos[0];
  1243  0135  0861               	movf	_Pos,w
  1244  0136  00CD               	movwf	??_checkFrequencyRange
  1245  0137  084D               	movf	??_checkFrequencyRange,w
  1246  0138  00DC               	movwf	_Period
  1247                           
  1248                           ;main.c: 255: Pos[0] = 0;
  1249  0139  01E1               	clrf	_Pos
  1250                           
  1251                           ;main.c: 256: Pos[1] = 0;
  1252  013A  01E2               	clrf	_Pos+1
  1253  013B                     l1330:	
  1254                           
  1255                           ;main.c: 257: }
  1256                           ;main.c: 260: if (Neg[1] == 1)
  1257  013B  0360               	decf	_Neg+1,w
  1258  013C  1D03               	btfss	3,2
  1259  013D  2944               	goto	l1338
  1260                           
  1261                           ;main.c: 261: {
  1262                           ;main.c: 264: Period[1] = Neg[0];
  1263  013E  085F               	movf	_Neg,w
  1264  013F  00CD               	movwf	??_checkFrequencyRange
  1265  0140  084D               	movf	??_checkFrequencyRange,w
  1266  0141  00DD               	movwf	_Period+1
  1267                           
  1268                           ;main.c: 265: Neg[0] = 0;
  1269  0142  01DF               	clrf	_Neg
  1270                           
  1271                           ;main.c: 266: Neg[1] = 0;
  1272  0143  01E0               	clrf	_Neg+1
  1273  0144                     l1338:	
  1274                           
  1275                           ;main.c: 267: }
  1276                           ;main.c: 270: counter++;
  1277  0144  3001               	movlw	1
  1278  0145  00CD               	movwf	??_checkFrequencyRange
  1279  0146  084D               	movf	??_checkFrequencyRange,w
  1280  0147  07E7               	addwf	_counter,f
  1281                           
  1282                           ;main.c: 271: if (counter >= 10)
  1283  0148  300A               	movlw	10
  1284  0149  0267               	subwf	_counter,w
  1285  014A  1C03               	skipc
  1286  014B  0008               	return
  1287                           
  1288                           ;main.c: 272: {
  1289                           ;main.c: 273: Period[2] = Period[0] + Period[1];
  1290  014C  085D               	movf	_Period+1,w
  1291  014D  075C               	addwf	_Period,w
  1292  014E  00CD               	movwf	??_checkFrequencyRange
  1293  014F  084D               	movf	??_checkFrequencyRange,w
  1294  0150  00DE               	movwf	_Period+2
  1295                           
  1296                           ;main.c: 278: if ((Period[2] >= countForHighValue) && (Period[2] <= countForLowValue))
  1297  0151  085E               	movf	_Period+2,w
  1298  0152  2414               	fcall	___lbtoft
  1299  0153  0020               	movlb	0	; select bank0
  1300  0154  0825               	movf	?___lbtoft,w
  1301  0155  00AC               	movwf	___ftge@ff1
  1302  0156  0826               	movf	?___lbtoft+1,w
  1303  0157  00AD               	movwf	___ftge@ff1+1
  1304  0158  0827               	movf	?___lbtoft+2,w
  1305  0159  00AE               	movwf	___ftge@ff1+2
  1306  015A  084E               	movf	checkFrequencyRange@countForHighValue,w
  1307  015B  00AF               	movwf	___ftge@ff2
  1308  015C  084F               	movf	checkFrequencyRange@countForHighValue+1,w
  1309  015D  00B0               	movwf	___ftge@ff2+1
  1310  015E  0850               	movf	checkFrequencyRange@countForHighValue+2,w
  1311  015F  00B1               	movwf	___ftge@ff2+2
  1312  0160  23D8               	fcall	___ftge
  1313  0161  1C03               	btfss	3,0
  1314  0162  297A               	goto	l1350
  1315  0163  0020               	movlb	0	; select bank0
  1316  0164  0854               	movf	checkFrequencyRange@countForLowValue,w
  1317  0165  00AC               	movwf	___ftge@ff1
  1318  0166  0855               	movf	checkFrequencyRange@countForLowValue+1,w
  1319  0167  00AD               	movwf	___ftge@ff1+1
  1320  0168  0856               	movf	checkFrequencyRange@countForLowValue+2,w
  1321  0169  00AE               	movwf	___ftge@ff1+2
  1322  016A  085E               	movf	_Period+2,w
  1323  016B  2414               	fcall	___lbtoft
  1324  016C  0020               	movlb	0	; select bank0
  1325  016D  0825               	movf	?___lbtoft,w
  1326  016E  00AF               	movwf	___ftge@ff2
  1327  016F  0826               	movf	?___lbtoft+1,w
  1328  0170  00B0               	movwf	___ftge@ff2+1
  1329  0171  0827               	movf	?___lbtoft+2,w
  1330  0172  00B1               	movwf	___ftge@ff2+2
  1331  0173  23D8               	fcall	___ftge
  1332  0174  1C03               	btfss	3,0
  1333  0175  297A               	goto	l1350
  1334                           
  1335                           ;main.c: 279: {
  1336                           ;main.c: 280: putch('%');
  1337  0176  3025               	movlw	37
  1338  0177  2459               	fcall	_putch
  1339                           
  1340                           ;main.c: 281: putch('0');
  1341  0178  3030               	movlw	48
  1342  0179  297D               	goto	L1
  1343  017A                     l1350:	
  1344                           ;main.c: 283: }
  1345                           
  1346                           
  1347                           ;main.c: 284: else
  1348                           ;main.c: 285: {
  1349                           ;main.c: 286: putch('%');
  1350  017A  3025               	movlw	37
  1351  017B  2459               	fcall	_putch
  1352                           
  1353                           ;main.c: 287: putch('1');
  1354  017C  3031               	movlw	49
  1355  017D                     L1:	
  1356  017D  2459               	fcall	_putch
  1357                           
  1358                           ;main.c: 289: }
  1359                           ;main.c: 291: counter = 0;
  1360  017E  0020               	movlb	0	; select bank0
  1361  017F  01E7               	clrf	_counter
  1362  0180  0008               	return
  1363  0181                     __end_of_checkFrequencyRange:	
  1364                           
  1365                           	psect	text2
  1366  0459                     __ptext2:	
  1367 ;; *************** function _putch *****************
  1368 ;; Defined at:
  1369 ;;		line 264 in file "RGBChroma.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  data            1    wreg     unsigned char 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  data            1    4[COMMON] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1383 ;;      Params:         0       0       0       0
  1384 ;;      Locals:         1       0       0       0
  1385 ;;      Temps:          0       0       0       0
  1386 ;;      Totals:         1       0       0       0
  1387 ;;Total ram usage:        1 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    1
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_main
  1394 ;;		_checkFrequencyRange
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _putch
  1400  0459                     _putch:	
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _putch: [wreg]
  1404                           ;putch@data stored from wreg
  1405  0459  00F4               	movwf	putch@data
  1406                           
  1407                           ;RGBChroma.c: 266: if( 1 == RCSTAbits.SPEN )
  1408  045A  0023               	movlb	3	; select bank3
  1409  045B  1F9D               	btfss	29,7	;volatile
  1410  045C  0008               	return
  1411  045D                     l139:	
  1412                           ;RGBChroma.c: 267: {
  1413                           ;RGBChroma.c: 268: while( ! TXIF) continue;
  1414                           
  1415  045D  0020               	movlb	0	; select bank0
  1416  045E  1E11               	btfss	17,4	;volatile
  1417  045F  2C5D               	goto	l139
  1418                           
  1419                           ;RGBChroma.c: 269: TXREG = data;
  1420  0460  0874               	movf	putch@data,w
  1421  0461  0023               	movlb	3	; select bank3
  1422  0462  009A               	movwf	26	;volatile
  1423  0463  0008               	return
  1424  0464                     __end_of_putch:	
  1425                           
  1426                           	psect	text3
  1427  0414                     __ptext3:	
  1428 ;; *************** function ___lbtoft *****************
  1429 ;; Defined at:
  1430 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbtoft.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  c               1    wreg     unsigned char 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  c               1    7[COMMON] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  3    5[BANK0 ] float 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1444 ;;      Params:         0       3       0       0
  1445 ;;      Locals:         1       0       0       0
  1446 ;;      Temps:          0       4       0       0
  1447 ;;      Totals:         1       7       0       0
  1448 ;;Total ram usage:        8 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    2
  1451 ;; This function calls:
  1452 ;;		___ftpack
  1453 ;; This function is called by:
  1454 ;;		_checkFrequencyRange
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function ___lbtoft
  1460  0414                     ___lbtoft:	
  1461                           
  1462                           ;incstack = 0
  1463                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  1464                           ;___lbtoft@c stored from wreg
  1465  0414  00F7               	movwf	___lbtoft@c
  1466  0415  0877               	movf	___lbtoft@c,w
  1467  0416  0020               	movlb	0	; select bank0
  1468  0417  00A8               	movwf	??___lbtoft
  1469  0418  01A9               	clrf	??___lbtoft+1
  1470  0419  01AA               	clrf	??___lbtoft+2
  1471  041A  0828               	movf	??___lbtoft,w
  1472  041B  00A0               	movwf	___ftpack@arg
  1473  041C  0829               	movf	??___lbtoft+1,w
  1474  041D  00A1               	movwf	___ftpack@arg+1
  1475  041E  082A               	movf	??___lbtoft+2,w
  1476  041F  00A2               	movwf	___ftpack@arg+2
  1477  0420  308E               	movlw	142
  1478  0421  00AB               	movwf	??___lbtoft+3
  1479  0422  082B               	movf	??___lbtoft+3,w
  1480  0423  00A3               	movwf	___ftpack@exp
  1481  0424  01A4               	clrf	___ftpack@sign
  1482  0425  2373               	fcall	___ftpack
  1483  0426  0020               	movlb	0	; select bank0
  1484  0427  0820               	movf	?___ftpack,w
  1485  0428  00A5               	movwf	?___lbtoft
  1486  0429  0821               	movf	?___ftpack+1,w
  1487  042A  00A6               	movwf	?___lbtoft+1
  1488  042B  0822               	movf	?___ftpack+2,w
  1489  042C  00A7               	movwf	?___lbtoft+2
  1490  042D  0008               	return
  1491  042E                     __end_of___lbtoft:	
  1492                           
  1493                           	psect	text4
  1494  0181                     __ptext4:	
  1495 ;; *************** function ___ftmul *****************
  1496 ;; Defined at:
  1497 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  f1              3   21[BANK0 ] float 
  1500 ;;  f2              3   24[BANK0 ] float 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  f3_as_produc    3   32[BANK0 ] unsigned um
  1503 ;;  sign            1   36[BANK0 ] unsigned char 
  1504 ;;  cntr            1   35[BANK0 ] unsigned char 
  1505 ;;  exp             1   31[BANK0 ] unsigned char 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  3   21[BANK0 ] float 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1515 ;;      Params:         0       6       0       0
  1516 ;;      Locals:         0       6       0       0
  1517 ;;      Temps:          0       4       0       0
  1518 ;;      Totals:         0      16       0       0
  1519 ;;Total ram usage:       16 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    2
  1522 ;; This function calls:
  1523 ;;		___ftpack
  1524 ;; This function is called by:
  1525 ;;		_checkFrequencyRange
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function ___ftmul
  1531  0181                     ___ftmul:	
  1532                           
  1533                           ;incstack = 0
  1534                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1535  0181  0020               	movlb	0	; select bank0
  1536  0182  0835               	movf	___ftmul@f1,w
  1537  0183  00BB               	movwf	??___ftmul
  1538  0184  0836               	movf	___ftmul@f1+1,w
  1539  0185  00BC               	movwf	??___ftmul+1
  1540  0186  0837               	movf	___ftmul@f1+2,w
  1541  0187  00BD               	movwf	??___ftmul+2
  1542  0188  1003               	clrc
  1543  0189  0D3C               	rlf	??___ftmul+1,w
  1544  018A  0D3D               	rlf	??___ftmul+2,w
  1545  018B  00BE               	movwf	??___ftmul+3
  1546  018C  083E               	movf	??___ftmul+3,w
  1547  018D  00BF               	movwf	___ftmul@exp
  1548  018E  083F               	movf	___ftmul@exp,w
  1549  018F  1D03               	btfss	3,2
  1550  0190  2998               	goto	l1254
  1551  0191  3000               	movlw	0
  1552  0192  00B5               	movwf	?___ftmul
  1553  0193  3000               	movlw	0
  1554  0194  00B6               	movwf	?___ftmul+1
  1555  0195  3000               	movlw	0
  1556  0196  00B7               	movwf	?___ftmul+2
  1557  0197  0008               	return
  1558  0198                     l1254:	
  1559  0198  0838               	movf	___ftmul@f2,w
  1560  0199  00BB               	movwf	??___ftmul
  1561  019A  0839               	movf	___ftmul@f2+1,w
  1562  019B  00BC               	movwf	??___ftmul+1
  1563  019C  083A               	movf	___ftmul@f2+2,w
  1564  019D  00BD               	movwf	??___ftmul+2
  1565  019E  1003               	clrc
  1566  019F  0D3C               	rlf	??___ftmul+1,w
  1567  01A0  0D3D               	rlf	??___ftmul+2,w
  1568  01A1  00BE               	movwf	??___ftmul+3
  1569  01A2  083E               	movf	??___ftmul+3,w
  1570  01A3  00C4               	movwf	___ftmul@sign
  1571  01A4  0844               	movf	___ftmul@sign,w
  1572  01A5  1D03               	btfss	3,2
  1573  01A6  29AE               	goto	l1260
  1574  01A7  3000               	movlw	0
  1575  01A8  00B5               	movwf	?___ftmul
  1576  01A9  3000               	movlw	0
  1577  01AA  00B6               	movwf	?___ftmul+1
  1578  01AB  3000               	movlw	0
  1579  01AC  00B7               	movwf	?___ftmul+2
  1580  01AD  0008               	return
  1581  01AE                     l1260:	
  1582  01AE  0844               	movf	___ftmul@sign,w
  1583  01AF  3E7B               	addlw	123
  1584  01B0  00BB               	movwf	??___ftmul
  1585  01B1  083B               	movf	??___ftmul,w
  1586  01B2  07BF               	addwf	___ftmul@exp,f
  1587  01B3  0835               	movf	___ftmul@f1,w
  1588  01B4  00BB               	movwf	??___ftmul
  1589  01B5  0836               	movf	___ftmul@f1+1,w
  1590  01B6  00BC               	movwf	??___ftmul+1
  1591  01B7  0837               	movf	___ftmul@f1+2,w
  1592  01B8  00BD               	movwf	??___ftmul+2
  1593  01B9  3010               	movlw	16
  1594  01BA                     u1435:	
  1595  01BA  36BD               	lsrf	??___ftmul+2,f
  1596  01BB  0CBC               	rrf	??___ftmul+1,f
  1597  01BC  0CBB               	rrf	??___ftmul,f
  1598  01BD  0B89               	decfsz	9,f
  1599  01BE  29BA               	goto	u1435
  1600  01BF  083B               	movf	??___ftmul,w
  1601  01C0  00BE               	movwf	??___ftmul+3
  1602  01C1  083E               	movf	??___ftmul+3,w
  1603  01C2  00C4               	movwf	___ftmul@sign
  1604  01C3  0838               	movf	___ftmul@f2,w
  1605  01C4  00BB               	movwf	??___ftmul
  1606  01C5  0839               	movf	___ftmul@f2+1,w
  1607  01C6  00BC               	movwf	??___ftmul+1
  1608  01C7  083A               	movf	___ftmul@f2+2,w
  1609  01C8  00BD               	movwf	??___ftmul+2
  1610  01C9  3010               	movlw	16
  1611  01CA                     u1445:	
  1612  01CA  36BD               	lsrf	??___ftmul+2,f
  1613  01CB  0CBC               	rrf	??___ftmul+1,f
  1614  01CC  0CBB               	rrf	??___ftmul,f
  1615  01CD  0B89               	decfsz	9,f
  1616  01CE  29CA               	goto	u1445
  1617  01CF  083B               	movf	??___ftmul,w
  1618  01D0  00BE               	movwf	??___ftmul+3
  1619  01D1  083E               	movf	??___ftmul+3,w
  1620  01D2  06C4               	xorwf	___ftmul@sign,f
  1621  01D3  3080               	movlw	128
  1622  01D4  00BB               	movwf	??___ftmul
  1623  01D5  083B               	movf	??___ftmul,w
  1624  01D6  05C4               	andwf	___ftmul@sign,f
  1625  01D7  17B6               	bsf	___ftmul@f1+1,7
  1626  01D8  17B9               	bsf	___ftmul@f2+1,7
  1627  01D9  30FF               	movlw	255
  1628  01DA  05B8               	andwf	___ftmul@f2,f
  1629  01DB  30FF               	movlw	255
  1630  01DC  05B9               	andwf	___ftmul@f2+1,f
  1631  01DD  3000               	movlw	0
  1632  01DE  05BA               	andwf	___ftmul@f2+2,f
  1633  01DF  3000               	movlw	0
  1634  01E0  00C0               	movwf	___ftmul@f3_as_product
  1635  01E1  3000               	movlw	0
  1636  01E2  00C1               	movwf	___ftmul@f3_as_product+1
  1637  01E3  3000               	movlw	0
  1638  01E4  00C2               	movwf	___ftmul@f3_as_product+2
  1639  01E5  3007               	movlw	7
  1640  01E6  00BB               	movwf	??___ftmul
  1641  01E7  083B               	movf	??___ftmul,w
  1642  01E8  00C3               	movwf	___ftmul@cntr
  1643  01E9                     l1272:	
  1644  01E9  1C35               	btfss	___ftmul@f1,0
  1645  01EA  29F1               	goto	l1276
  1646  01EB  0838               	movf	___ftmul@f2,w
  1647  01EC  07C0               	addwf	___ftmul@f3_as_product,f
  1648  01ED  0839               	movf	___ftmul@f2+1,w
  1649  01EE  3DC1               	addwfc	___ftmul@f3_as_product+1,f
  1650  01EF  083A               	movf	___ftmul@f2+2,w
  1651  01F0  3DC2               	addwfc	___ftmul@f3_as_product+2,f
  1652  01F1                     l1276:	
  1653  01F1  3001               	movlw	1
  1654  01F2                     u1465:	
  1655  01F2  36B7               	lsrf	___ftmul@f1+2,f
  1656  01F3  0CB6               	rrf	___ftmul@f1+1,f
  1657  01F4  0CB5               	rrf	___ftmul@f1,f
  1658  01F5  0B89               	decfsz	9,f
  1659  01F6  29F2               	goto	u1465
  1660  01F7  3001               	movlw	1
  1661  01F8                     u1475:	
  1662  01F8  35B8               	lslf	___ftmul@f2,f
  1663  01F9  0DB9               	rlf	___ftmul@f2+1,f
  1664  01FA  0DBA               	rlf	___ftmul@f2+2,f
  1665  01FB  0B89               	decfsz	9,f
  1666  01FC  29F8               	goto	u1475
  1667  01FD  3001               	movlw	1
  1668  01FE  02C3               	subwf	___ftmul@cntr,f
  1669  01FF  1D03               	btfss	3,2
  1670  0200  29E9               	goto	l1272
  1671  0201  3009               	movlw	9
  1672  0202  00BB               	movwf	??___ftmul
  1673  0203  083B               	movf	??___ftmul,w
  1674  0204  00C3               	movwf	___ftmul@cntr
  1675  0205                     l1284:	
  1676  0205  1C35               	btfss	___ftmul@f1,0
  1677  0206  2A0D               	goto	l1288
  1678  0207  0838               	movf	___ftmul@f2,w
  1679  0208  07C0               	addwf	___ftmul@f3_as_product,f
  1680  0209  0839               	movf	___ftmul@f2+1,w
  1681  020A  3DC1               	addwfc	___ftmul@f3_as_product+1,f
  1682  020B  083A               	movf	___ftmul@f2+2,w
  1683  020C  3DC2               	addwfc	___ftmul@f3_as_product+2,f
  1684  020D                     l1288:	
  1685  020D  3001               	movlw	1
  1686  020E                     u1505:	
  1687  020E  36B7               	lsrf	___ftmul@f1+2,f
  1688  020F  0CB6               	rrf	___ftmul@f1+1,f
  1689  0210  0CB5               	rrf	___ftmul@f1,f
  1690  0211  0B89               	decfsz	9,f
  1691  0212  2A0E               	goto	u1505
  1692  0213  3001               	movlw	1
  1693  0214                     u1515:	
  1694  0214  36C2               	lsrf	___ftmul@f3_as_product+2,f
  1695  0215  0CC1               	rrf	___ftmul@f3_as_product+1,f
  1696  0216  0CC0               	rrf	___ftmul@f3_as_product,f
  1697  0217  0B89               	decfsz	9,f
  1698  0218  2A14               	goto	u1515
  1699  0219  3001               	movlw	1
  1700  021A  02C3               	subwf	___ftmul@cntr,f
  1701  021B  1D03               	btfss	3,2
  1702  021C  2A05               	goto	l1284
  1703  021D  0840               	movf	___ftmul@f3_as_product,w
  1704  021E  00A0               	movwf	___ftpack@arg
  1705  021F  0841               	movf	___ftmul@f3_as_product+1,w
  1706  0220  00A1               	movwf	___ftpack@arg+1
  1707  0221  0842               	movf	___ftmul@f3_as_product+2,w
  1708  0222  00A2               	movwf	___ftpack@arg+2
  1709  0223  083F               	movf	___ftmul@exp,w
  1710  0224  00BB               	movwf	??___ftmul
  1711  0225  083B               	movf	??___ftmul,w
  1712  0226  00A3               	movwf	___ftpack@exp
  1713  0227  0844               	movf	___ftmul@sign,w
  1714  0228  00BC               	movwf	??___ftmul+1
  1715  0229  083C               	movf	??___ftmul+1,w
  1716  022A  00A4               	movwf	___ftpack@sign
  1717  022B  2373               	fcall	___ftpack
  1718  022C  0020               	movlb	0	; select bank0
  1719  022D  0820               	movf	?___ftpack,w
  1720  022E  00B5               	movwf	?___ftmul
  1721  022F  0821               	movf	?___ftpack+1,w
  1722  0230  00B6               	movwf	?___ftmul+1
  1723  0231  0822               	movf	?___ftpack+2,w
  1724  0232  00B7               	movwf	?___ftmul+2
  1725  0233  0008               	return
  1726  0234                     __end_of___ftmul:	
  1727                           
  1728                           	psect	text5
  1729  03D8                     __ptext5:	
  1730 ;; *************** function ___ftge *****************
  1731 ;; Defined at:
  1732 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  ff1             3   12[BANK0 ] float 
  1735 ;;  ff2             3   15[BANK0 ] float 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;		None               void
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1747 ;;      Params:         0       6       0       0
  1748 ;;      Locals:         0       0       0       0
  1749 ;;      Temps:          0       3       0       0
  1750 ;;      Totals:         0       9       0       0
  1751 ;;Total ram usage:        9 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_checkFrequencyRange
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function ___ftge
  1763  03D8                     ___ftge:	
  1764                           
  1765                           ;incstack = 0
  1766                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1767  03D8  0020               	movlb	0	; select bank0
  1768  03D9  1FAE               	btfss	___ftge@ff1+2,7
  1769  03DA  2BEF               	goto	l952
  1770  03DB  092C               	comf	___ftge@ff1,w
  1771  03DC  00B2               	movwf	??___ftge
  1772  03DD  092D               	comf	___ftge@ff1+1,w
  1773  03DE  00B3               	movwf	??___ftge+1
  1774  03DF  092E               	comf	___ftge@ff1+2,w
  1775  03E0  00B4               	movwf	??___ftge+2
  1776  03E1  0AB2               	incf	??___ftge,f
  1777  03E2  1903               	skipnz
  1778  03E3  0AB3               	incf	??___ftge+1,f
  1779  03E4  1903               	skipnz
  1780  03E5  0AB4               	incf	??___ftge+2,f
  1781  03E6  3000               	movlw	0
  1782  03E7  0732               	addwf	??___ftge,w
  1783  03E8  00AC               	movwf	___ftge@ff1
  1784  03E9  3000               	movlw	0
  1785  03EA  3D33               	addwfc	??___ftge+1,w
  1786  03EB  00AD               	movwf	___ftge@ff1+1
  1787  03EC  3080               	movlw	128
  1788  03ED  3D34               	addwfc	??___ftge+2,w
  1789  03EE  00AE               	movwf	___ftge@ff1+2
  1790  03EF                     l952:	
  1791  03EF  1FB1               	btfss	___ftge@ff2+2,7
  1792  03F0  2C05               	goto	l956
  1793  03F1  092F               	comf	___ftge@ff2,w
  1794  03F2  00B2               	movwf	??___ftge
  1795  03F3  0930               	comf	___ftge@ff2+1,w
  1796  03F4  00B3               	movwf	??___ftge+1
  1797  03F5  0931               	comf	___ftge@ff2+2,w
  1798  03F6  00B4               	movwf	??___ftge+2
  1799  03F7  0AB2               	incf	??___ftge,f
  1800  03F8  1903               	skipnz
  1801  03F9  0AB3               	incf	??___ftge+1,f
  1802  03FA  1903               	skipnz
  1803  03FB  0AB4               	incf	??___ftge+2,f
  1804  03FC  3000               	movlw	0
  1805  03FD  0732               	addwf	??___ftge,w
  1806  03FE  00AF               	movwf	___ftge@ff2
  1807  03FF  3000               	movlw	0
  1808  0400  3D33               	addwfc	??___ftge+1,w
  1809  0401  00B0               	movwf	___ftge@ff2+1
  1810  0402  3080               	movlw	128
  1811  0403  3D34               	addwfc	??___ftge+2,w
  1812  0404  00B1               	movwf	___ftge@ff2+2
  1813  0405                     l956:	
  1814  0405  3080               	movlw	128
  1815  0406  06AE               	xorwf	___ftge@ff1+2,f
  1816  0407  3080               	movlw	128
  1817  0408  06B1               	xorwf	___ftge@ff2+2,f
  1818  0409  0831               	movf	___ftge@ff2+2,w
  1819  040A  022E               	subwf	___ftge@ff1+2,w
  1820  040B  1D03               	skipz
  1821  040C  0008               	return
  1822  040D  0830               	movf	___ftge@ff2+1,w
  1823  040E  022D               	subwf	___ftge@ff1+1,w
  1824  040F  1D03               	skipz
  1825  0410  0008               	return
  1826  0411  082F               	movf	___ftge@ff2,w
  1827  0412  022C               	subwf	___ftge@ff1,w
  1828  0413  0008               	return
  1829  0414                     __end_of___ftge:	
  1830                           
  1831                           	psect	text6
  1832  0234                     __ptext6:	
  1833 ;; *************** function ___ftdiv *****************
  1834 ;; Defined at:
  1835 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  f2              3    5[BANK0 ] float 
  1838 ;;  f1              3    8[BANK0 ] float 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  f3              3   16[BANK0 ] float 
  1841 ;;  sign            1   20[BANK0 ] unsigned char 
  1842 ;;  exp             1   19[BANK0 ] unsigned char 
  1843 ;;  cntr            1   15[BANK0 ] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  3    5[BANK0 ] float 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0, pclath, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1853 ;;      Params:         0       6       0       0
  1854 ;;      Locals:         0       6       0       0
  1855 ;;      Temps:          0       4       0       0
  1856 ;;      Totals:         0      16       0       0
  1857 ;;Total ram usage:       16 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    2
  1860 ;; This function calls:
  1861 ;;		___ftpack
  1862 ;; This function is called by:
  1863 ;;		_checkFrequencyRange
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function ___ftdiv
  1869  0234                     ___ftdiv:	
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1873  0234  0020               	movlb	0	; select bank0
  1874  0235  0828               	movf	___ftdiv@f1,w
  1875  0236  00AB               	movwf	??___ftdiv
  1876  0237  0829               	movf	___ftdiv@f1+1,w
  1877  0238  00AC               	movwf	??___ftdiv+1
  1878  0239  082A               	movf	___ftdiv@f1+2,w
  1879  023A  00AD               	movwf	??___ftdiv+2
  1880  023B  1003               	clrc
  1881  023C  0D2C               	rlf	??___ftdiv+1,w
  1882  023D  0D2D               	rlf	??___ftdiv+2,w
  1883  023E  00AE               	movwf	??___ftdiv+3
  1884  023F  082E               	movf	??___ftdiv+3,w
  1885  0240  00B3               	movwf	___ftdiv@exp
  1886  0241  0833               	movf	___ftdiv@exp,w
  1887  0242  1D03               	btfss	3,2
  1888  0243  2A4B               	goto	l1212
  1889  0244  3000               	movlw	0
  1890  0245  00A5               	movwf	?___ftdiv
  1891  0246  3000               	movlw	0
  1892  0247  00A6               	movwf	?___ftdiv+1
  1893  0248  3000               	movlw	0
  1894  0249  00A7               	movwf	?___ftdiv+2
  1895  024A  0008               	return
  1896  024B                     l1212:	
  1897  024B  0825               	movf	___ftdiv@f2,w
  1898  024C  00AB               	movwf	??___ftdiv
  1899  024D  0826               	movf	___ftdiv@f2+1,w
  1900  024E  00AC               	movwf	??___ftdiv+1
  1901  024F  0827               	movf	___ftdiv@f2+2,w
  1902  0250  00AD               	movwf	??___ftdiv+2
  1903  0251  1003               	clrc
  1904  0252  0D2C               	rlf	??___ftdiv+1,w
  1905  0253  0D2D               	rlf	??___ftdiv+2,w
  1906  0254  00AE               	movwf	??___ftdiv+3
  1907  0255  082E               	movf	??___ftdiv+3,w
  1908  0256  00B4               	movwf	___ftdiv@sign
  1909  0257  0834               	movf	___ftdiv@sign,w
  1910  0258  1D03               	btfss	3,2
  1911  0259  2A61               	goto	l1218
  1912  025A  3000               	movlw	0
  1913  025B  00A5               	movwf	?___ftdiv
  1914  025C  3000               	movlw	0
  1915  025D  00A6               	movwf	?___ftdiv+1
  1916  025E  3000               	movlw	0
  1917  025F  00A7               	movwf	?___ftdiv+2
  1918  0260  0008               	return
  1919  0261                     l1218:	
  1920  0261  3000               	movlw	0
  1921  0262  00B0               	movwf	___ftdiv@f3
  1922  0263  3000               	movlw	0
  1923  0264  00B1               	movwf	___ftdiv@f3+1
  1924  0265  3000               	movlw	0
  1925  0266  00B2               	movwf	___ftdiv@f3+2
  1926  0267  3089               	movlw	137
  1927  0268  0734               	addwf	___ftdiv@sign,w
  1928  0269  00AB               	movwf	??___ftdiv
  1929  026A  082B               	movf	??___ftdiv,w
  1930  026B  02B3               	subwf	___ftdiv@exp,f
  1931  026C  0828               	movf	___ftdiv@f1,w
  1932  026D  00AB               	movwf	??___ftdiv
  1933  026E  0829               	movf	___ftdiv@f1+1,w
  1934  026F  00AC               	movwf	??___ftdiv+1
  1935  0270  082A               	movf	___ftdiv@f1+2,w
  1936  0271  00AD               	movwf	??___ftdiv+2
  1937  0272  3010               	movlw	16
  1938  0273                     u1355:	
  1939  0273  36AD               	lsrf	??___ftdiv+2,f
  1940  0274  0CAC               	rrf	??___ftdiv+1,f
  1941  0275  0CAB               	rrf	??___ftdiv,f
  1942  0276  0B89               	decfsz	9,f
  1943  0277  2A73               	goto	u1355
  1944  0278  082B               	movf	??___ftdiv,w
  1945  0279  00AE               	movwf	??___ftdiv+3
  1946  027A  082E               	movf	??___ftdiv+3,w
  1947  027B  00B4               	movwf	___ftdiv@sign
  1948  027C  0825               	movf	___ftdiv@f2,w
  1949  027D  00AB               	movwf	??___ftdiv
  1950  027E  0826               	movf	___ftdiv@f2+1,w
  1951  027F  00AC               	movwf	??___ftdiv+1
  1952  0280  0827               	movf	___ftdiv@f2+2,w
  1953  0281  00AD               	movwf	??___ftdiv+2
  1954  0282  3010               	movlw	16
  1955  0283                     u1365:	
  1956  0283  36AD               	lsrf	??___ftdiv+2,f
  1957  0284  0CAC               	rrf	??___ftdiv+1,f
  1958  0285  0CAB               	rrf	??___ftdiv,f
  1959  0286  0B89               	decfsz	9,f
  1960  0287  2A83               	goto	u1365
  1961  0288  082B               	movf	??___ftdiv,w
  1962  0289  00AE               	movwf	??___ftdiv+3
  1963  028A  082E               	movf	??___ftdiv+3,w
  1964  028B  06B4               	xorwf	___ftdiv@sign,f
  1965  028C  3080               	movlw	128
  1966  028D  00AB               	movwf	??___ftdiv
  1967  028E  082B               	movf	??___ftdiv,w
  1968  028F  05B4               	andwf	___ftdiv@sign,f
  1969  0290  17A9               	bsf	___ftdiv@f1+1,7
  1970  0291  30FF               	movlw	255
  1971  0292  05A8               	andwf	___ftdiv@f1,f
  1972  0293  30FF               	movlw	255
  1973  0294  05A9               	andwf	___ftdiv@f1+1,f
  1974  0295  3000               	movlw	0
  1975  0296  05AA               	andwf	___ftdiv@f1+2,f
  1976  0297  17A6               	bsf	___ftdiv@f2+1,7
  1977  0298  30FF               	movlw	255
  1978  0299  05A5               	andwf	___ftdiv@f2,f
  1979  029A  30FF               	movlw	255
  1980  029B  05A6               	andwf	___ftdiv@f2+1,f
  1981  029C  3000               	movlw	0
  1982  029D  05A7               	andwf	___ftdiv@f2+2,f
  1983  029E  3018               	movlw	24
  1984  029F  00AB               	movwf	??___ftdiv
  1985  02A0  082B               	movf	??___ftdiv,w
  1986  02A1  00AF               	movwf	___ftdiv@cntr
  1987  02A2                     l1232:	
  1988  02A2  3001               	movlw	1
  1989  02A3                     u1375:	
  1990  02A3  35B0               	lslf	___ftdiv@f3,f
  1991  02A4  0DB1               	rlf	___ftdiv@f3+1,f
  1992  02A5  0DB2               	rlf	___ftdiv@f3+2,f
  1993  02A6  0B89               	decfsz	9,f
  1994  02A7  2AA3               	goto	u1375
  1995  02A8  0827               	movf	___ftdiv@f2+2,w
  1996  02A9  022A               	subwf	___ftdiv@f1+2,w
  1997  02AA  1D03               	skipz
  1998  02AB  2AB2               	goto	u1385
  1999  02AC  0826               	movf	___ftdiv@f2+1,w
  2000  02AD  0229               	subwf	___ftdiv@f1+1,w
  2001  02AE  1D03               	skipz
  2002  02AF  2AB2               	goto	u1385
  2003  02B0  0825               	movf	___ftdiv@f2,w
  2004  02B1  0228               	subwf	___ftdiv@f1,w
  2005  02B2                     u1385:	
  2006  02B2  1C03               	skipc
  2007  02B3  2ABB               	goto	l1240
  2008  02B4  0825               	movf	___ftdiv@f2,w
  2009  02B5  02A8               	subwf	___ftdiv@f1,f
  2010  02B6  0826               	movf	___ftdiv@f2+1,w
  2011  02B7  3BA9               	subwfb	___ftdiv@f1+1,f
  2012  02B8  0827               	movf	___ftdiv@f2+2,w
  2013  02B9  3BAA               	subwfb	___ftdiv@f1+2,f
  2014  02BA  1430               	bsf	___ftdiv@f3,0
  2015  02BB                     l1240:	
  2016  02BB  3001               	movlw	1
  2017  02BC                     u1395:	
  2018  02BC  35A8               	lslf	___ftdiv@f1,f
  2019  02BD  0DA9               	rlf	___ftdiv@f1+1,f
  2020  02BE  0DAA               	rlf	___ftdiv@f1+2,f
  2021  02BF  0B89               	decfsz	9,f
  2022  02C0  2ABC               	goto	u1395
  2023  02C1  3001               	movlw	1
  2024  02C2  02AF               	subwf	___ftdiv@cntr,f
  2025  02C3  1D03               	btfss	3,2
  2026  02C4  2AA2               	goto	l1232
  2027  02C5  0830               	movf	___ftdiv@f3,w
  2028  02C6  00A0               	movwf	___ftpack@arg
  2029  02C7  0831               	movf	___ftdiv@f3+1,w
  2030  02C8  00A1               	movwf	___ftpack@arg+1
  2031  02C9  0832               	movf	___ftdiv@f3+2,w
  2032  02CA  00A2               	movwf	___ftpack@arg+2
  2033  02CB  0833               	movf	___ftdiv@exp,w
  2034  02CC  00AB               	movwf	??___ftdiv
  2035  02CD  082B               	movf	??___ftdiv,w
  2036  02CE  00A3               	movwf	___ftpack@exp
  2037  02CF  0834               	movf	___ftdiv@sign,w
  2038  02D0  00AC               	movwf	??___ftdiv+1
  2039  02D1  082C               	movf	??___ftdiv+1,w
  2040  02D2  00A4               	movwf	___ftpack@sign
  2041  02D3  2373               	fcall	___ftpack
  2042  02D4  0020               	movlb	0	; select bank0
  2043  02D5  0820               	movf	?___ftpack,w
  2044  02D6  00A5               	movwf	?___ftdiv
  2045  02D7  0821               	movf	?___ftpack+1,w
  2046  02D8  00A6               	movwf	?___ftdiv+1
  2047  02D9  0822               	movf	?___ftpack+2,w
  2048  02DA  00A7               	movwf	?___ftdiv+2
  2049  02DB  0008               	return
  2050  02DC                     __end_of___ftdiv:	
  2051                           
  2052                           	psect	text7
  2053  0373                     __ptext7:	
  2054 ;; *************** function ___ftpack *****************
  2055 ;; Defined at:
  2056 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  arg             3    0[BANK0 ] unsigned um
  2059 ;;  exp             1    3[BANK0 ] unsigned char 
  2060 ;;  sign            1    4[BANK0 ] unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  3    0[BANK0 ] float 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2072 ;;      Params:         0       5       0       0
  2073 ;;      Locals:         0       0       0       0
  2074 ;;      Temps:          3       0       0       0
  2075 ;;      Totals:         3       5       0       0
  2076 ;;Total ram usage:        8 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		___ftdiv
  2083 ;;		___ftmul
  2084 ;;		___lbtoft
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function ___ftpack
  2090  0373                     ___ftpack:	
  2091                           
  2092                           ;incstack = 0
  2093                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2094  0373  0020               	movlb	0	; select bank0
  2095  0374  0823               	movf	___ftpack@exp,w
  2096  0375  1903               	btfsc	3,2
  2097  0376  2B7C               	goto	l1178
  2098  0377  0822               	movf	___ftpack@arg+2,w
  2099  0378  0421               	iorwf	___ftpack@arg+1,w
  2100  0379  0420               	iorwf	___ftpack@arg,w
  2101  037A  1D03               	skipz
  2102  037B  2B8D               	goto	l1184
  2103  037C                     l1178:	
  2104  037C  3000               	movlw	0
  2105  037D  00A0               	movwf	?___ftpack
  2106  037E  3000               	movlw	0
  2107  037F  00A1               	movwf	?___ftpack+1
  2108  0380  3000               	movlw	0
  2109  0381  00A2               	movwf	?___ftpack+2
  2110  0382  0008               	return
  2111  0383                     l1182:	
  2112  0383  3001               	movlw	1
  2113  0384  00F4               	movwf	??___ftpack
  2114  0385  0874               	movf	??___ftpack,w
  2115  0386  07A3               	addwf	___ftpack@exp,f
  2116  0387  3001               	movlw	1
  2117  0388                     u1235:	
  2118  0388  36A2               	lsrf	___ftpack@arg+2,f
  2119  0389  0CA1               	rrf	___ftpack@arg+1,f
  2120  038A  0CA0               	rrf	___ftpack@arg,f
  2121  038B  0B89               	decfsz	9,f
  2122  038C  2B88               	goto	u1235
  2123  038D                     l1184:	
  2124  038D  30FE               	movlw	254
  2125  038E  0522               	andwf	___ftpack@arg+2,w
  2126  038F  1903               	btfsc	3,2
  2127  0390  2BA6               	goto	l307
  2128  0391  2B83               	goto	l1182
  2129  0392                     l1186:	
  2130  0392  3001               	movlw	1
  2131  0393  00F4               	movwf	??___ftpack
  2132  0394  0874               	movf	??___ftpack,w
  2133  0395  07A3               	addwf	___ftpack@exp,f
  2134  0396  3001               	movlw	1
  2135  0397  07A0               	addwf	___ftpack@arg,f
  2136  0398  3000               	movlw	0
  2137  0399  1803               	skipnc
  2138  039A  3001               	movlw	1
  2139  039B  07A1               	addwf	___ftpack@arg+1,f
  2140  039C  3000               	movlw	0
  2141  039D  1803               	skipnc
  2142  039E  3001               	movlw	1
  2143  039F  07A2               	addwf	___ftpack@arg+2,f
  2144  03A0  3001               	movlw	1
  2145  03A1                     u1255:	
  2146  03A1  36A2               	lsrf	___ftpack@arg+2,f
  2147  03A2  0CA1               	rrf	___ftpack@arg+1,f
  2148  03A3  0CA0               	rrf	___ftpack@arg,f
  2149  03A4  0B89               	decfsz	9,f
  2150  03A5  2BA1               	goto	u1255
  2151  03A6                     l307:	
  2152  03A6  30FF               	movlw	255
  2153  03A7  0522               	andwf	___ftpack@arg+2,w
  2154  03A8  1903               	btfsc	3,2
  2155  03A9  2BB3               	goto	l1194
  2156  03AA  2B92               	goto	l1186
  2157  03AB                     l1192:	
  2158  03AB  3001               	movlw	1
  2159  03AC  02A3               	subwf	___ftpack@exp,f
  2160  03AD  3001               	movlw	1
  2161  03AE                     u1275:	
  2162  03AE  35A0               	lslf	___ftpack@arg,f
  2163  03AF  0DA1               	rlf	___ftpack@arg+1,f
  2164  03B0  0DA2               	rlf	___ftpack@arg+2,f
  2165  03B1  0B89               	decfsz	9,f
  2166  03B2  2BAE               	goto	u1275
  2167  03B3                     l1194:	
  2168  03B3  1BA1               	btfsc	___ftpack@arg+1,7
  2169  03B4  2BB9               	goto	l314
  2170  03B5  3002               	movlw	2
  2171  03B6  0223               	subwf	___ftpack@exp,w
  2172  03B7  1803               	skipnc
  2173  03B8  2BAB               	goto	l1192
  2174  03B9                     l314:	
  2175  03B9  1823               	btfsc	___ftpack@exp,0
  2176  03BA  2BC1               	goto	l315
  2177  03BB  30FF               	movlw	255
  2178  03BC  05A0               	andwf	___ftpack@arg,f
  2179  03BD  307F               	movlw	127
  2180  03BE  05A1               	andwf	___ftpack@arg+1,f
  2181  03BF  30FF               	movlw	255
  2182  03C0  05A2               	andwf	___ftpack@arg+2,f
  2183  03C1                     l315:	
  2184  03C1  1003               	clrc
  2185  03C2  0CA3               	rrf	___ftpack@exp,f
  2186  03C3  0823               	movf	___ftpack@exp,w
  2187  03C4  00F4               	movwf	??___ftpack
  2188  03C5  01F5               	clrf	??___ftpack+1
  2189  03C6  01F6               	clrf	??___ftpack+2
  2190  03C7  3010               	movlw	16
  2191  03C8                     u1315:	
  2192  03C8  35F4               	lslf	??___ftpack,f
  2193  03C9  0DF5               	rlf	??___ftpack+1,f
  2194  03CA  0DF6               	rlf	??___ftpack+2,f
  2195  03CB  0B89               	decfsz	9,f
  2196  03CC  2BC8               	goto	u1315
  2197  03CD  0874               	movf	??___ftpack,w
  2198  03CE  04A0               	iorwf	___ftpack@arg,f
  2199  03CF  0875               	movf	??___ftpack+1,w
  2200  03D0  04A1               	iorwf	___ftpack@arg+1,f
  2201  03D1  0876               	movf	??___ftpack+2,w
  2202  03D2  04A2               	iorwf	___ftpack@arg+2,f
  2203  03D3  0824               	movf	___ftpack@sign,w
  2204  03D4  1903               	btfsc	3,2
  2205  03D5  0008               	return
  2206  03D6  17A2               	bsf	___ftpack@arg+2,7
  2207  03D7  0008               	return
  2208  03D8                     __end_of___ftpack:	
  2209                           
  2210                           	psect	text8
  2211  044D                     __ptext8:	
  2212 ;; *************** function _Example_System_Init *****************
  2213 ;; Defined at:
  2214 ;;		line 146 in file "main.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2228 ;;      Params:         0       0       0       0
  2229 ;;      Locals:         0       0       0       0
  2230 ;;      Temps:          0       0       0       0
  2231 ;;      Totals:         0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _Example_System_Init
  2244  044D                     _Example_System_Init:	
  2245                           
  2246                           ;main.c: 153: OSCCON = 0b01111000;
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _Example_System_Init: [wreg+status,2]
  2250  044D  3078               	movlw	120
  2251  044E  0021               	movlb	1	; select bank1
  2252  044F  0099               	movwf	25	;volatile
  2253                           
  2254                           ;main.c: 158: ANSELA = 0b00000000;
  2255  0450  0023               	movlb	3	; select bank3
  2256  0451  018C               	clrf	12	;volatile
  2257                           
  2258                           ;main.c: 159: LATA = 0b00110100;
  2259  0452  3034               	movlw	52
  2260  0453  0022               	movlb	2	; select bank2
  2261  0454  008C               	movwf	12	;volatile
  2262                           
  2263                           ;main.c: 160: TRISA = 0b00010000;
  2264  0455  3010               	movlw	16
  2265  0456  0021               	movlb	1	; select bank1
  2266  0457  008C               	movwf	12	;volatile
  2267  0458  0008               	return
  2268  0459                     __end_of_Example_System_Init:	
  2269                           
  2270                           	psect	text9
  2271  042E                     __ptext9:	
  2272 ;; *************** function _EUSARTInit *****************
  2273 ;; Defined at:
  2274 ;;		line 84 in file "RGBChroma.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		None
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2288 ;;      Params:         0       0       0       0
  2289 ;;      Locals:         0       0       0       0
  2290 ;;      Temps:          0       0       0       0
  2291 ;;      Totals:         0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           
  2303                           ;psect for function _EUSARTInit
  2304  042E                     _EUSARTInit:	
  2305                           
  2306                           ;RGBChroma.c: 102: TRISAbits.TRISA1 = 1;
  2307                           
  2308                           ;incstack = 0
  2309                           ; Regs used in _EUSARTInit: []
  2310  042E  0021               	movlb	1	; select bank1
  2311  042F  148C               	bsf	12,1	;volatile
  2312                           
  2313                           ;RGBChroma.c: 103: TRISAbits.TRISA0 = 0;
  2314  0430  100C               	bcf	12,0	;volatile
  2315                           
  2316                           ;RGBChroma.c: 104: BAUDCONbits.BRG16 = 1;
  2317  0431  0023               	movlb	3	; select bank3
  2318  0432  159F               	bsf	31,3	;volatile
  2319                           
  2320                           ;RGBChroma.c: 105: TXSTAbits.BRGH = 1;
  2321  0433  151E               	bsf	30,2	;volatile
  2322                           
  2323                           ;RGBChroma.c: 106: SPBRG = ((16000000)/( 4L * (9600)));
  2324  0434  3001               	movlw	1
  2325  0435  009C               	movwf	28	;volatile
  2326  0436  30A0               	movlw	160
  2327  0437  009B               	movwf	27	;volatile
  2328                           
  2329                           ;RGBChroma.c: 107: TXSTAbits.TXEN = 1;
  2330  0438  169E               	bsf	30,5	;volatile
  2331                           
  2332                           ;RGBChroma.c: 108: RCSTAbits.CREN = 1;
  2333  0439  161D               	bsf	29,4	;volatile
  2334                           
  2335                           ;RGBChroma.c: 109: RCSTAbits.SPEN = 1;
  2336  043A  179D               	bsf	29,7	;volatile
  2337                           
  2338                           ;RGBChroma.c: 110: TXSTAbits.SYNC = 0;
  2339  043B  121E               	bcf	30,4	;volatile
  2340                           
  2341                           ;RGBChroma.c: 112: PIE1bits.RCIE = 1;
  2342  043C  0021               	movlb	1	; select bank1
  2343  043D  1691               	bsf	17,5	;volatile
  2344                           
  2345                           ;RGBChroma.c: 113: INTCONbits.GIE = 1;
  2346  043E  178B               	bsf	11,7	;volatile
  2347                           
  2348                           ;RGBChroma.c: 114: INTCONbits.PEIE = 1;
  2349  043F  170B               	bsf	11,6	;volatile
  2350  0440  0008               	return
  2351  0441                     __end_of_EUSARTInit:	
  2352                           
  2353                           	psect	intentry
  2354  0004                     __pintentry:	
  2355 ;; *************** function _InterruptHandlerLow *****************
  2356 ;; Defined at:
  2357 ;;		line 45 in file "main.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  cUART_char      1    3[COMMON] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2371 ;;      Params:         0       0       0       0
  2372 ;;      Locals:         1       0       0       0
  2373 ;;      Temps:          3       0       0       0
  2374 ;;      Totals:         4       0       0       0
  2375 ;;Total ram usage:        4 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		Interrupt level 1
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384  0004                     _InterruptHandlerLow:	
  2385                           
  2386                           ;incstack = 0
  2387  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2388                           
  2389                           ; Regs used in _InterruptHandlerLow: [wreg+fsr1l+fsr1h+status,2+status,0]
  2390  0005  3180               	pagesel	$
  2391  0006  0020               	movlb	0	; select bank0
  2392  0007  087F               	movf	127,w
  2393  0008  00F2               	movwf	??_InterruptHandlerLow+2
  2394                           
  2395                           ;main.c: 47: unsigned char cUART_char= 0;
  2396  0009  01F3               	clrf	InterruptHandlerLow@cUART_char
  2397                           
  2398                           ;main.c: 49: if (PIR1bits.RCIF==1)
  2399  000A  1E91               	btfss	17,5	;volatile
  2400  000B  284C               	goto	i1l62
  2401                           
  2402                           ;main.c: 51: {
  2403                           ;main.c: 53: if(RCSTAbits.FERR==1 || RCSTAbits.OERR==1 )
  2404  000C  0023               	movlb	3	; select bank3
  2405  000D  191D               	btfsc	29,2	;volatile
  2406  000E  2811               	goto	i1l56
  2407  000F  1C9D               	btfss	29,1	;volatile
  2408  0010  2818               	goto	i1l1096
  2409  0011                     i1l56:	
  2410                           
  2411                           ;main.c: 54: {
  2412                           ;main.c: 55: RCSTAbits.CREN=0;
  2413  0011  121D               	bcf	29,4	;volatile
  2414                           
  2415                           ;main.c: 56: cUART_char=RCREG;
  2416  0012  0819               	movf	25,w	;volatile
  2417  0013  00F0               	movwf	??_InterruptHandlerLow
  2418  0014  0870               	movf	??_InterruptHandlerLow,w
  2419  0015  00F3               	movwf	InterruptHandlerLow@cUART_char
  2420                           
  2421                           ;main.c: 57: RCSTAbits.CREN=1;
  2422  0016  161D               	bsf	29,4	;volatile
  2423                           
  2424                           ;main.c: 58: }
  2425  0017  281C               	goto	i1l1098
  2426  0018                     i1l1096:	
  2427                           
  2428                           ;main.c: 59: else
  2429                           ;main.c: 60: {
  2430                           ;main.c: 61: cUART_char = RCREG;
  2431  0018  0819               	movf	25,w	;volatile
  2432  0019  00F0               	movwf	??_InterruptHandlerLow
  2433  001A  0870               	movf	??_InterruptHandlerLow,w
  2434  001B  00F3               	movwf	InterruptHandlerLow@cUART_char
  2435  001C                     i1l1098:	
  2436                           
  2437                           ;main.c: 62: }
  2438                           ;main.c: 65: if( cUART_char == '$' )
  2439  001C  3024               	movlw	36
  2440  001D  0673               	xorwf	InterruptHandlerLow@cUART_char,w
  2441  001E  1D03               	btfss	3,2
  2442  001F  2834               	goto	i1l1106
  2443                           
  2444                           ;main.c: 66: {
  2445                           ;main.c: 67: GPS_flag= 0;
  2446  0020  01F8               	clrf	_GPS_flag
  2447                           
  2448                           ;main.c: 68: GPS_out= 0;
  2449  0021  0020               	movlb	0	; select bank0
  2450  0022  01E6               	clrf	_GPS_out
  2451                           
  2452                           ;main.c: 69: GPS[GPS_flag++]= '$';
  2453  0023  0878               	movf	_GPS_flag,w
  2454  0024  3E8C               	addlw	140
  2455  0025  00F0               	movwf	??_InterruptHandlerLow
  2456  0026  01F1               	clrf	??_InterruptHandlerLow+1
  2457  0027  3020               	movlw	32
  2458  0028  3DF1               	addwfc	??_InterruptHandlerLow+1,f
  2459  0029  0870               	movf	??_InterruptHandlerLow,w
  2460  002A  0086               	movwf	6
  2461  002B  0871               	movf	??_InterruptHandlerLow+1,w
  2462  002C  0087               	movwf	7
  2463  002D  3024               	movlw	36
  2464  002E  0081               	movwf	1
  2465  002F  3001               	movlw	1
  2466  0030  00F0               	movwf	??_InterruptHandlerLow
  2467  0031  0870               	movf	??_InterruptHandlerLow,w
  2468  0032  07F8               	addwf	_GPS_flag,f
  2469                           
  2470                           ;main.c: 70: }
  2471  0033  284C               	goto	i1l62
  2472  0034                     i1l1106:	
  2473                           
  2474                           ;main.c: 71: else if( GPS_flag > 0 )
  2475  0034  0878               	movf	_GPS_flag,w
  2476  0035  1903               	btfsc	3,2
  2477  0036  284C               	goto	i1l62
  2478                           
  2479                           ;main.c: 72: {
  2480                           ;main.c: 73: test=1;
  2481  0037  01F9               	clrf	_test
  2482  0038  0AF9               	incf	_test,f
  2483                           
  2484                           ;main.c: 74: GPS[GPS_flag++]= cUART_char;
  2485  0039  0878               	movf	_GPS_flag,w
  2486  003A  3E8C               	addlw	140
  2487  003B  00F0               	movwf	??_InterruptHandlerLow
  2488  003C  01F1               	clrf	??_InterruptHandlerLow+1
  2489  003D  3020               	movlw	32
  2490  003E  3DF1               	addwfc	??_InterruptHandlerLow+1,f
  2491  003F  0870               	movf	??_InterruptHandlerLow,w
  2492  0040  0086               	movwf	6
  2493  0041  0871               	movf	??_InterruptHandlerLow+1,w
  2494  0042  0087               	movwf	7
  2495  0043  0873               	movf	InterruptHandlerLow@cUART_char,w
  2496  0044  0081               	movwf	1
  2497  0045  3001               	movlw	1
  2498  0046  00F0               	movwf	??_InterruptHandlerLow
  2499  0047  0870               	movf	??_InterruptHandlerLow,w
  2500  0048  07F8               	addwf	_GPS_flag,f
  2501                           
  2502                           ;main.c: 76: GPS_out= 1;
  2503  0049  0020               	movlb	0	; select bank0
  2504  004A  01E6               	clrf	_GPS_out
  2505  004B  0AE6               	incf	_GPS_out,f
  2506  004C                     i1l62:	
  2507                           ;main.c: 78: else
  2508                           ;main.c: 79: ;
  2509                           
  2510                           ;main.c: 77: }
  2511                           
  2512  004C  0872               	movf	??_InterruptHandlerLow+2,w
  2513  004D  0020               	movlb	0	; select bank0
  2514  004E  00FF               	movwf	127
  2515  004F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2516  0050  0009               	retfie
  2517  0051                     __end_of_InterruptHandlerLow:	
  2518  007E                     btemp	set	126	;btemp
  2519  007E                     int$flags	set	126
  2520  007E                     wtemp	set	126
  2521  007E                     wtemp0	set	126
  2522  0080                     wtemp1	set	128
  2523  0082                     wtemp2	set	130
  2524  0084                     wtemp3	set	132
  2525  0086                     wtemp4	set	134
  2526  0088                     wtemp5	set	136
  2527  007F                     wtemp6	set	127
  2528  007E                     ttemp	set	126
  2529  007E                     ttemp0	set	126
  2530  0081                     ttemp1	set	129
  2531  0084                     ttemp2	set	132
  2532  0087                     ttemp3	set	135
  2533  007F                     ttemp4	set	127
  2534  007E                     ltemp	set	126
  2535  007E                     ltemp0	set	126
  2536  0082                     ltemp1	set	130
  2537  0086                     ltemp2	set	134
  2538  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     60      78
    BANK1            60      0       6
    BANK2             0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _checkFrequencyRange->___lbtoft
    ___lbtoft->___ftpack
    ___ftmul->___ftpack
    ___ftge->___lbtoft
    ___ftdiv->___ftpack
    ___ftdiv->___ftpack

Critical Paths under _InterruptHandlerLow in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkFrequencyRange
    _checkFrequencyRange->___ftmul
    ___lbtoft->___ftpack
    ___ftmul->___ftdiv
    ___ftge->___lbtoft
    ___ftdiv->___ftpack
    ___ftdiv->___ftpack

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   10589
                                             55 BANK0      5     5      0
                         _EUSARTInit
                _Example_System_Init
                _checkFrequencyRange
                              _putch
 ---------------------------------------------------------------------------------
 (1) _checkFrequencyRange                                 21    13      8   10335
                                             37 BANK0     18    10      8
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             8     5      3    2435
                                              7 COMMON     1     1      0
                                              5 BANK0      7     4      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3200
                                             21 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     648
                                             12 BANK0      9     3      6
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3440
                                              5 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                              4 COMMON     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (1) _Example_System_Init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSARTInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptHandlerLow                                  4     4      0      47
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSARTInit
   _Example_System_Init
   _checkFrequencyRange
     ___ftdiv
       ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___lbtoft
       ___ftpack
     _putch
   _putch

 _InterruptHandlerLow (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3C      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               3C      0       6       8       10.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      5E      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Jan 17 23:19:05 2018

                         __CFG_CP$OFF 0000                           ?_EUSARTInit 0070  
                                 l314 03B9                                   l315 03C1  
                                 l307 03A6                                   l139 045D  
                                 l952 03EF                                   l956 0405  
                                 _GPS 208C                                   _Neg 005F  
                                 _Pos 0061                          __CFG_BORV$LO 0000  
                                 wreg 0009                          __CFG_LVP$OFF 0000  
                        ___ftdiv@cntr 002F                          ___ftdiv@sign 0034  
                                l1212 024B                                  l1310 00FC  
                                l1240 02BB                                  l1232 02A2  
                                l1218 0261                                  l1330 013B  
                                l1322 0131                                  l1314 0106  
                                l1410 0361                                  l1402 034D  
                                l1260 01AE                                  l1404 0357  
                                l1182 0383                                  l1254 0198  
                                l1350 017A                                  l1318 011B  
                                l1192 03AB                                  l1184 038D  
                                l1272 01E9                                  l1408 035D  
                                l1194 03B3                                  l1186 0392  
                                l1178 037C                                  l1338 0144  
                                l1284 0205                                  l1276 01F1  
                                l1288 020D                                  l1392 0333  
                                l1376 0309                                  l1368 0300  
                                l1386 032E                                  l1398 0342  
                                u1315 03C8                                  u1235 0388  
                                _LATA 010C                                  u1255 03A1  
                                u1505 020E                                  u1275 03AE  
                                u1355 0273                                  u1515 0214  
                                u1435 01BA                                  u1365 0283  
                                u1445 01CA                                  u1375 02A3  
                                u1385 02B2                                  u1465 01F2  
                                u1395 02BC                                  u1475 01F8  
                                u1717 02E4                                  u1727 02F6  
                                u1737 0348                                  u1747 0352  
                                i1l62 004C                                  i1l56 0011  
                                _TXIF 008C                          __CFG_WRT$OFF 0000  
                                _main 02DC                          ___ftpack@arg 0020  
                        ___ftpack@exp 0023                                  _test 0079  
                                fsr0h 0005                                  fsr1h 0007  
                                fsr0l 0004                                  indf0 0000  
                                indf1 0001                                  fsr1l 0006  
                                btemp 007E                                  ltemp 007E  
                                start 0051                                  ttemp 007E  
                                wtemp 007E                         __CFG_MCLRE$ON 0000  
                        ___ftmul@cntr 0043                          ___ftmul@sign 0044  
                               ?_main 0070                         __CFG_WDTE$OFF 0000  
                     __end_of___ftdiv 02DC                       __end_of___ftmul 0234  
                               _RCREG 0199                                 _SPBRG 019B  
                               _TRISA 008C                                 _TXREG 019A  
                       ___ftpack@sign 0024                                 _putch 0459  
                               main@i 005B                        __CFG_BOREN$OFF 0000  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                               ttemp0 007E                                 ttemp1 0081  
                               ttemp2 0084                                 ttemp3 0087  
                               ttemp4 007F                                 status 0003  
                               wtemp0 007E                                 wtemp1 0080  
                               wtemp2 0082                                 wtemp3 0084  
                               wtemp4 0086                                 wtemp5 0088  
                               wtemp6 007F                   __size_of_EUSARTInit 0013  
                     __initialization 0052                   _checkFrequencyRange 0080  
                        __end_of_main 0373               _checkFrequencyRange$682 0051  
                              ??_main 0057                  ?_checkFrequencyRange 0045  
                              _ANSELA 018C                                ?_putch 0070  
                    __end_of___ftpack 03D8                      __end_of___lbtoft 042E  
                              i1l1106 0034                                i1l1096 0018  
                              i1l1098 001C                                _OSCCON 0099  
                      __CFG_PWRTE$OFF 0000   checkFrequencyRange@countForLowValue 0054  
                              _Period 005C                                ___ftge 03D8  
                      __CFG_STVREN$ON 0000                             ??___ftdiv 002B  
                           ??___ftmul 003B                 ___ftmul@f3_as_product 0040  
               ??_checkFrequencyRange 004D               __end_of__initialization 007D  
                          ___ftge@ff1 002C                            ___ftge@ff2 002F  
                          ___ftdiv@f1 0028                            ___ftdiv@f2 0025  
                          ___ftdiv@f3 0030                            ___lbtoft@c 0077  
                          ___ftmul@f1 0035                            ___ftmul@f2 0038  
                      __pcstackCOMMON 0070                          __pidataBANK0 0464  
                       __end_of_putch 0464                          ??_EUSARTInit 0074  
         __end_of_InterruptHandlerLow 0051           __end_of_Example_System_Init 0459  
                             ??_putch 0074                            __pbssBANK0 005C  
                          __pbssBANK1 00A0                    __end_of_EUSARTInit 0441  
                          __pmaintext 02DC                               ?___ftge 002C  
                          __pintentry 0004                             ?___ftpack 0020  
                           ?___lbtoft 0025           checkFrequencyRange@lowValue 0045  
                             _GPS_out 0066                       __size_of___ftge 003C  
                             ___ftdiv 0234                               ___ftmul 0181  
                          ??___ftpack 0074                            ??___lbtoft 0028  
                             __ptext1 0080                               __ptext2 0459  
                             __ptext3 0414                               __ptext4 0181  
                             __ptext5 03D8                               __ptext6 0234  
                             __ptext7 0373                               __ptext8 044D  
                             __ptext9 042E                               _counter 0067  
                             _rxBytes 00A0                               clrloop0 0442  
                end_of_initialization 007D                             _RCSTAbits 019D  
                           _PORTAbits 000C                      __CFG_FOSC$INTOSC 0000  
                           _TRISAbits 008C                           ___ftdiv@exp 0033  
                           _TXSTAbits 019E                           ___ftmul@exp 003F  
                      __end_of___ftge 0414                           _BAUDCONbits 019F  
         __end_of_checkFrequencyRange 0181                             _Flow_Init 0065  
                 start_initialization 0052                   _lowValueOfFrequency 006B  
                            ??___ftge 0032                           __pdataBANK0 0068  
                   __size_of___ftpack 0065                     __size_of___lbtoft 001A  
                         __pbssBIGRAM 208C                           __pbssCOMMON 0078  
                           ___latbits 0000                         __pcstackBANK0 0020  
        __size_of_InterruptHandlerLow 004D          __size_of_Example_System_Init 000C  
                            ?___ftdiv 0025                              ?___ftmul 0035  
        checkFrequencyRange@highValue 0048                        __size_of_putch 000B  
       InterruptHandlerLow@cUART_char 0073                  _highValueOfFrequency 0068  
                           clear_ram0 0441                              _PIE1bits 0091  
                            _PIR1bits 0011                              _GPS_flag 0078  
        checkFrequencyRange@sensorVal 004B                      __size_of___ftdiv 00A8  
                    __size_of___ftmul 00B3                              ___ftpack 0373  
                            ___lbtoft 0414                            _ANSELAbits 018C  
                       __size_of_main 0097                              int$flags 007E  
                 _InterruptHandlerLow 0004                            _EUSARTInit 042E  
                           putch@data 0074                   _Example_System_Init 044D  
                          _INTCONbits 000B          __size_of_checkFrequencyRange 0101  
                            intlevel1 0000                  ?_InterruptHandlerLow 0070  
                   __CFG_CLKOUTEN$OFF 0000                  ?_Example_System_Init 0070  
checkFrequencyRange@countForHighValue 004E                           _sensorVal_1 0063  
               ??_InterruptHandlerLow 0070                 ??_Example_System_Init 0074  
